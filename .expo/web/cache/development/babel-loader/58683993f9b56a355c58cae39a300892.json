{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Github\\\\aicare\\\\node_modules\\\\react-native-tab-navigator\\\\Badge.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Layout from \"./Layout\";\n\nvar Badge = function (_React$Component) {\n  _inherits(Badge, _React$Component);\n\n  var _super = _createSuper(Badge);\n\n  function Badge(props, context) {\n    var _this;\n\n    _classCallCheck(this, Badge);\n\n    _this = _super.call(this, props, context);\n    _this.state = {\n      computedSize: null\n    };\n    _this._handleLayout = _this._handleLayout.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Badge, [{\n    key: \"render\",\n    value: function render() {\n      var computedSize = this.state.computedSize;\n      var style = {};\n\n      if (!computedSize) {\n        style.opacity = 0;\n      } else {\n        style.width = Math.max(computedSize.height, computedSize.width);\n      }\n\n      return React.createElement(Text, _extends({}, this.props, {\n        numberOfLines: 1,\n        onLayout: this._handleLayout,\n        style: [styles.container, this.props.style, style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }), this.props.children);\n    }\n  }, {\n    key: \"_handleLayout\",\n    value: function _handleLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          width = _event$nativeEvent$la.width,\n          height = _event$nativeEvent$la.height;\n      var computedSize = this.state.computedSize;\n\n      if (computedSize && computedSize.height === height && computedSize.width === width) {\n        return;\n      }\n\n      this.setState({\n        computedSize: {\n          width: width,\n          height: height\n        }\n      });\n\n      if (this.props.onLayout) {\n        this.props.onLayout(event);\n      }\n    }\n  }]);\n\n  return Badge;\n}(React.Component);\n\nBadge.propTypes = Text.propTypes;\nexport { Badge as default };\nvar styles = StyleSheet.create({\n  container: {\n    fontSize: 12,\n    color: '#fff',\n    backgroundColor: 'rgb(0, 122, 255)',\n    lineHeight: 15,\n    textAlign: 'center',\n    borderWidth: 1 + Layout.pixel,\n    borderColor: '#fefefe',\n    borderRadius: 17 / 2,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["F:/Github/aicare/node_modules/react-native-tab-navigator/Badge.js"],"names":["React","Layout","Badge","props","context","state","computedSize","_handleLayout","bind","style","opacity","width","Math","max","height","styles","container","children","event","nativeEvent","layout","setState","onLayout","Component","propTypes","Text","StyleSheet","create","fontSize","color","backgroundColor","lineHeight","textAlign","borderWidth","pixel","borderColor","borderRadius","overflow"],"mappings":"AAAA;;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;;AAMA,OAAOC,MAAP;;IAEqBC,K;;;;;AAGnB,iBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AAC1B,8BAAMD,KAAN,EAAaC,OAAb;AAD0B,UAM5BC,KAN4B,GAMpB;AACNC,MAAAA,YAAY,EAAE;AADR,KANoB;AAG1B,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AAH0B;AAI3B;;;;6BAMQ;AAAA,UACDF,YADC,GACgB,KAAKD,KADrB,CACDC,YADC;AAEP,UAAIG,KAAK,GAAG,EAAZ;;AACA,UAAI,CAACH,YAAL,EAAmB;AACjBG,QAAAA,KAAK,CAACC,OAAN,GAAgB,CAAhB;AACD,OAFD,MAEO;AACLD,QAAAA,KAAK,CAACE,KAAN,GAAcC,IAAI,CAACC,GAAL,CAASP,YAAY,CAACQ,MAAtB,EAA8BR,YAAY,CAACK,KAA3C,CAAd;AACD;;AAED,aACE,oBAAC,IAAD,eACM,KAAKR,KADX;AAEE,QAAA,aAAa,EAAE,CAFjB;AAGE,QAAA,QAAQ,EAAE,KAAKI,aAHjB;AAIE,QAAA,KAAK,EAAE,CAACQ,MAAM,CAACC,SAAR,EAAmB,KAAKb,KAAL,CAAWM,KAA9B,EAAqCA,KAArC,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKG,KAAKN,KAAL,CAAWc,QALd,CADF;AASD;;;kCAEaC,K,EAAO;AAAA,kCACKA,KAAK,CAACC,WAAN,CAAkBC,MADvB;AAAA,UACbT,KADa,yBACbA,KADa;AAAA,UACNG,MADM,yBACNA,MADM;AAAA,UAEbR,YAFa,GAEI,KAAKD,KAFT,CAEbC,YAFa;;AAGnB,UAAIA,YAAY,IAAIA,YAAY,CAACQ,MAAb,KAAwBA,MAAxC,IACFR,YAAY,CAACK,KAAb,KAAuBA,KADzB,EACgC;AAC9B;AACD;;AAED,WAAKU,QAAL,CAAc;AACZf,QAAAA,YAAY,EAAE;AAAEK,UAAAA,KAAK,EAALA,KAAF;AAASG,UAAAA,MAAM,EAANA;AAAT;AADF,OAAd;;AAIA,UAAI,KAAKX,KAAL,CAAWmB,QAAf,EAAyB;AACvB,aAAKnB,KAAL,CAAWmB,QAAX,CAAoBJ,KAApB;AACD;AACF;;;;EAhDgClB,KAAK,CAACuB,S;;AAApBrB,K,CACZsB,S,GAAYC,IAAI,CAACD,S;SADLtB,K;AAmDrB,IAAIa,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,eAAe,EAAE,kBAHR;AAITC,IAAAA,UAAU,EAAE,EAJH;AAKTC,IAAAA,SAAS,EAAE,QALF;AAMTC,IAAAA,WAAW,EAAE,IAAIhC,MAAM,CAACiC,KANf;AAOTC,IAAAA,WAAW,EAAE,SAPJ;AAQTC,IAAAA,YAAY,EAAE,KAAK,CARV;AASTC,IAAAA,QAAQ,EAAE;AATD;AADkB,CAAlB,CAAb","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  Text,\n} from 'react-native';\n\nimport Layout from './Layout';\n\nexport default class Badge extends React.Component {\n  static propTypes = Text.propTypes;\n\n  constructor(props, context) {\n    super(props, context);\n\n    this._handleLayout = this._handleLayout.bind(this);\n  }\n\n  state = {\n    computedSize: null,\n  };\n\n  render() {\n    let { computedSize } = this.state;\n    let style = {};\n    if (!computedSize) {\n      style.opacity = 0;\n    } else {\n      style.width = Math.max(computedSize.height, computedSize.width);\n    }\n\n    return (\n      <Text\n        {...this.props}\n        numberOfLines={1}\n        onLayout={this._handleLayout}\n        style={[styles.container, this.props.style, style]}>\n        {this.props.children}\n      </Text>\n    );\n  }\n\n  _handleLayout(event) {\n    let { width, height } = event.nativeEvent.layout;\n    let { computedSize } = this.state;\n    if (computedSize && computedSize.height === height &&\n      computedSize.width === width) {\n      return;\n    }\n\n    this.setState({\n      computedSize: { width, height },\n    });\n\n    if (this.props.onLayout) {\n      this.props.onLayout(event);\n    }\n  }\n}\n\nlet styles = StyleSheet.create({\n  container: {\n    fontSize: 12,\n    color: '#fff',\n    backgroundColor: 'rgb(0, 122, 255)',\n    lineHeight: 15,\n    textAlign: 'center',\n    borderWidth: 1 + Layout.pixel,\n    borderColor: '#fefefe',\n    borderRadius: 17 / 2,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}