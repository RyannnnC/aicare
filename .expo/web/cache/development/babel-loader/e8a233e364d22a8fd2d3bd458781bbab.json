{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/olivermou/Documents/GitHub/aicare/node_modules/react-native-calendar-picker/CalendarPicker/Day.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nexport default function Day(props) {\n  var day = props.day,\n      month = props.month,\n      year = props.year,\n      styles = props.styles,\n      customDatesStyles = props.customDatesStyles,\n      onPressDay = props.onPressDay,\n      selectedStartDate = props.selectedStartDate,\n      selectedEndDate = props.selectedEndDate,\n      allowRangeSelection = props.allowRangeSelection,\n      allowBackwardRangeSelect = props.allowBackwardRangeSelect,\n      propSelectedDayStyle = props.selectedDayStyle,\n      selectedDisabledDatesTextStyle = props.selectedDisabledDatesTextStyle,\n      selectedRangeStartStyle = props.selectedRangeStartStyle,\n      selectedRangeStyle = props.selectedRangeStyle,\n      selectedRangeEndStyle = props.selectedRangeEndStyle,\n      textStyle = props.textStyle,\n      todayTextStyle = props.todayTextStyle,\n      propSelectedDayTextStyle = props.selectedDayTextStyle,\n      selectedRangeStartTextStyle = props.selectedRangeStartTextStyle,\n      selectedRangeEndTextStyle = props.selectedRangeEndTextStyle,\n      minDate = props.minDate,\n      maxDate = props.maxDate,\n      disabledDates = props.disabledDates,\n      disabledDatesTextStyle = props.disabledDatesTextStyle,\n      minRangeDuration = props.minRangeDuration,\n      maxRangeDuration = props.maxRangeDuration,\n      enableDateChange = props.enableDateChange;\n  var thisDay = moment({\n    year: year,\n    month: month,\n    day: day,\n    hour: 12\n  });\n  var today = moment();\n  var dateOutOfRange;\n  var computedSelectedDayStyle = styles.dayButton;\n  var selectedDayTextStyle = {};\n  var selectedDayStyle;\n  var overrideOutOfRangeTextStyle;\n  var dateIsBeforeMin = false;\n  var dateIsAfterMax = false;\n  var dateIsDisabled = false;\n  var dateRangeLessThanMin = false;\n  var dateRangeGreaterThanMax = false;\n\n  if (maxDate) {\n    dateIsAfterMax = thisDay.isAfter(maxDate, 'day');\n  }\n\n  if (minDate) {\n    dateIsBeforeMin = thisDay.isBefore(minDate, 'day');\n  }\n\n  if (disabledDates) {\n    if (Array.isArray(disabledDates) && disabledDates.indexOf(thisDay.valueOf()) >= 0) {\n      dateIsDisabled = true;\n    } else if (disabledDates instanceof Function) {\n      dateIsDisabled = disabledDates(thisDay);\n    }\n  }\n\n  if (allowRangeSelection && selectedStartDate && !selectedEndDate) {\n    var daysDiff = thisDay.diff(selectedStartDate, 'days');\n    daysDiff = allowBackwardRangeSelect ? Math.abs(daysDiff) : daysDiff;\n\n    if (maxRangeDuration) {\n      if (Array.isArray(maxRangeDuration)) {\n        var maxRangeEntry = maxRangeDuration.find(function (mrd) {\n          return selectedStartDate.isSame(mrd.date, 'day');\n        });\n\n        if (maxRangeEntry && daysDiff > maxRangeEntry.maxDuration) {\n          dateRangeGreaterThanMax = true;\n        }\n      } else if (daysDiff > maxRangeDuration) {\n        dateRangeGreaterThanMax = true;\n      }\n    }\n\n    if (minRangeDuration) {\n      if (Array.isArray(minRangeDuration)) {\n        var minRangeEntry = minRangeDuration.find(function (mrd) {\n          return selectedStartDate.isSame(mrd.date, 'day');\n        });\n\n        if (minRangeEntry && daysDiff < minRangeEntry.minDuration) {\n          dateRangeLessThanMin = true;\n        }\n      } else if (daysDiff < minRangeDuration) {\n        dateRangeLessThanMin = true;\n      }\n    }\n\n    if (!allowBackwardRangeSelect && daysDiff < 0) {\n      dateRangeLessThanMin = true;\n    }\n  }\n\n  dateOutOfRange = dateIsAfterMax || dateIsBeforeMin || dateIsDisabled || dateRangeLessThanMin || dateRangeGreaterThanMax;\n  var isThisDaySameAsSelectedStart = thisDay.isSame(selectedStartDate, 'day');\n  var isThisDaySameAsSelectedEnd = thisDay.isSame(selectedEndDate, 'day');\n  var isThisDateInSelectedRange = selectedStartDate && selectedEndDate && thisDay.isBetween(selectedStartDate, selectedEndDate, 'day', '[]');\n\n  if (!dateOutOfRange || isThisDaySameAsSelectedStart || isThisDaySameAsSelectedEnd || isThisDateInSelectedRange) {\n    var isToday = thisDay.isSame(today, 'day');\n\n    if (isToday) {\n      computedSelectedDayStyle = styles.selectedToday;\n      selectedDayTextStyle = [todayTextStyle || styles.selectedDayLabel, propSelectedDayTextStyle];\n    }\n\n    var custom = getCustomDateStyle({\n      customDatesStyles: customDatesStyles,\n      date: thisDay\n    });\n\n    if (isToday && custom.style) {\n      computedSelectedDayStyle = [styles.selectedToday, custom.style];\n    }\n\n    if (!allowRangeSelection && selectedStartDate && isThisDaySameAsSelectedStart) {\n      computedSelectedDayStyle = styles.selectedDay;\n      selectedDayTextStyle = [styles.selectedDayLabel, isToday && todayTextStyle, propSelectedDayTextStyle];\n      selectedDayStyle = propSelectedDayStyle || styles.selectedDayBackground;\n    }\n\n    if (allowRangeSelection) {\n      if (selectedStartDate && selectedEndDate) {\n        if (isThisDaySameAsSelectedStart) {\n          computedSelectedDayStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\n        }\n\n        if (isThisDaySameAsSelectedEnd) {\n          computedSelectedDayStyle = [styles.endDayWrapper, selectedRangeStyle, selectedRangeEndStyle];\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeEndTextStyle];\n        }\n\n        if (isThisDaySameAsSelectedEnd && isThisDaySameAsSelectedStart && selectedEndDate.isSame(selectedStartDate, 'day')) {\n          computedSelectedDayStyle = [styles.selectedDay, styles.selectedDayBackground, selectedRangeStyle];\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\n        }\n\n        if (thisDay.isBetween(selectedStartDate, selectedEndDate, 'day', '()')) {\n          computedSelectedDayStyle = [styles.inRangeDay, selectedRangeStyle];\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle];\n        }\n      }\n\n      if (selectedStartDate && !selectedEndDate && isThisDaySameAsSelectedStart) {\n        computedSelectedDayStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\n        selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\n        overrideOutOfRangeTextStyle = selectedRangeStartTextStyle;\n      }\n    }\n\n    if (dateOutOfRange) {\n      return React.createElement(View, {\n        style: [styles.dayWrapper, custom.containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [custom.style, computedSelectedDayStyle, selectedDayStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.dayLabel, textStyle, styles.disabledText, disabledDatesTextStyle, styles.selectedDisabledText, selectedDisabledDatesTextStyle, overrideOutOfRangeTextStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }\n      }, day)));\n    } else {\n      return React.createElement(View, {\n        style: [styles.dayWrapper, custom.containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: !enableDateChange,\n        style: [custom.style, computedSelectedDayStyle, selectedDayStyle],\n        onPress: function onPress() {\n          return onPressDay({\n            year: year,\n            month: month,\n            day: day\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.dayLabel, textStyle, custom.textStyle, selectedDayTextStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, day)));\n    }\n  } else {\n    var _custom = getCustomDateStyle({\n      customDatesStyles: customDatesStyles,\n      date: thisDay\n    });\n\n    if (!_custom.allowDisabled) {\n      _custom.containerStyle = null;\n      _custom.style = null;\n      _custom.textStyle = null;\n    }\n\n    return React.createElement(View, {\n      style: [styles.dayWrapper, _custom.containerStyle],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: [styles.dayButton, _custom.style],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: [textStyle, styles.disabledText, disabledDatesTextStyle, _custom.textStyle],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, day)));\n  }\n}\n\nfunction getCustomDateStyle(_ref) {\n  var customDatesStyles = _ref.customDatesStyles,\n      date = _ref.date;\n\n  if (Array.isArray(customDatesStyles)) {\n    for (var _iterator = _createForOfIteratorHelperLoose(customDatesStyles), _step; !(_step = _iterator()).done;) {\n      var cds = _step.value;\n\n      if (date.isSame(moment(cds.date), 'day')) {\n        return _objectSpread({}, cds);\n      }\n    }\n  } else if (customDatesStyles instanceof Function) {\n    var _cds = customDatesStyles(date) || {};\n\n    return _objectSpread({}, _cds);\n  }\n\n  return {};\n}\n\nDay.defaultProps = {\n  customDatesStyles: []\n};\nDay.propTypes = {\n  styles: PropTypes.shape({}),\n  day: PropTypes.number,\n  onPressDay: PropTypes.func,\n  disabledDates: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n  minRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\n  maxRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number])\n};","map":{"version":3,"sources":["/Users/olivermou/Documents/GitHub/aicare/node_modules/react-native-calendar-picker/CalendarPicker/Day.js"],"names":["React","PropTypes","moment","Day","props","day","month","year","styles","customDatesStyles","onPressDay","selectedStartDate","selectedEndDate","allowRangeSelection","allowBackwardRangeSelect","propSelectedDayStyle","selectedDayStyle","selectedDisabledDatesTextStyle","selectedRangeStartStyle","selectedRangeStyle","selectedRangeEndStyle","textStyle","todayTextStyle","propSelectedDayTextStyle","selectedDayTextStyle","selectedRangeStartTextStyle","selectedRangeEndTextStyle","minDate","maxDate","disabledDates","disabledDatesTextStyle","minRangeDuration","maxRangeDuration","enableDateChange","thisDay","hour","today","dateOutOfRange","computedSelectedDayStyle","dayButton","overrideOutOfRangeTextStyle","dateIsBeforeMin","dateIsAfterMax","dateIsDisabled","dateRangeLessThanMin","dateRangeGreaterThanMax","isAfter","isBefore","Array","isArray","indexOf","valueOf","Function","daysDiff","diff","Math","abs","maxRangeEntry","find","mrd","isSame","date","maxDuration","minRangeEntry","minDuration","isThisDaySameAsSelectedStart","isThisDaySameAsSelectedEnd","isThisDateInSelectedRange","isBetween","isToday","selectedToday","selectedDayLabel","custom","getCustomDateStyle","style","selectedDay","selectedDayBackground","startDayWrapper","endDayWrapper","inRangeDay","dayWrapper","containerStyle","dayLabel","disabledText","selectedDisabledText","allowDisabled","cds","defaultProps","propTypes","shape","number","func","oneOfType","array"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\n\r\nexport default function Day(props) {\r\n  const {\r\n    day,\r\n    month,\r\n    year,\r\n    styles,\r\n    customDatesStyles,\r\n    onPressDay,\r\n    selectedStartDate,\r\n    selectedEndDate,\r\n    allowRangeSelection,\r\n    allowBackwardRangeSelect,\r\n    selectedDayStyle: propSelectedDayStyle,\r\n    selectedDisabledDatesTextStyle,\r\n    selectedRangeStartStyle,\r\n    selectedRangeStyle,\r\n    selectedRangeEndStyle,\r\n    textStyle,\r\n    todayTextStyle,\r\n    selectedDayTextStyle: propSelectedDayTextStyle,\r\n    selectedRangeStartTextStyle,\r\n    selectedRangeEndTextStyle,\r\n    minDate,\r\n    maxDate,\r\n    disabledDates,\r\n    disabledDatesTextStyle,\r\n    minRangeDuration,\r\n    maxRangeDuration,\r\n    enableDateChange\r\n  } = props;\r\n\r\n  const thisDay = moment({year, month, day, hour: 12 });\r\n  const today = moment();\r\n\r\n  let dateOutOfRange;\r\n  let computedSelectedDayStyle = styles.dayButton; // may be overridden depending on state\r\n  let selectedDayTextStyle = {};\r\n  let selectedDayStyle;\r\n  let overrideOutOfRangeTextStyle;\r\n  let dateIsBeforeMin = false;\r\n  let dateIsAfterMax = false;\r\n  let dateIsDisabled = false;\r\n  let dateRangeLessThanMin = false;\r\n  let dateRangeGreaterThanMax = false;\r\n\r\n  // First let's check if date is out of range\r\n  // Check whether props maxDate / minDate are defined. If not supplied,\r\n  // don't restrict dates.\r\n  if (maxDate) {\r\n    dateIsAfterMax = thisDay.isAfter(maxDate, 'day');\r\n  }\r\n  if (minDate) {\r\n    dateIsBeforeMin = thisDay.isBefore(minDate, 'day');\r\n  }\r\n\r\n  if (disabledDates) {\r\n    if (Array.isArray(disabledDates) && disabledDates.indexOf(thisDay.valueOf()) >= 0) {\r\n      dateIsDisabled = true;\r\n    }\r\n    else if (disabledDates instanceof Function) {\r\n      dateIsDisabled = disabledDates(thisDay);\r\n    }\r\n  }\r\n\r\n  if (allowRangeSelection && selectedStartDate && !selectedEndDate) {\r\n    let daysDiff = thisDay.diff(selectedStartDate, 'days'); // may be + or -\r\n    daysDiff = allowBackwardRangeSelect ? Math.abs(daysDiff) : daysDiff;\r\n\r\n    if (maxRangeDuration) {\r\n      if (Array.isArray(maxRangeDuration)) {\r\n        let maxRangeEntry = maxRangeDuration.find(mrd => selectedStartDate.isSame(mrd.date, 'day') );\r\n        if (maxRangeEntry && daysDiff > maxRangeEntry.maxDuration) {\r\n          dateRangeGreaterThanMax = true;\r\n        }\r\n      } else if(daysDiff > maxRangeDuration) {\r\n        dateRangeGreaterThanMax = true;\r\n      }\r\n    }\r\n\r\n    if (minRangeDuration) {\r\n      if (Array.isArray(minRangeDuration)) {\r\n        let minRangeEntry = minRangeDuration.find(mrd => selectedStartDate.isSame(mrd.date, 'day') );\r\n        if (minRangeEntry && daysDiff < minRangeEntry.minDuration) {\r\n          dateRangeLessThanMin = true;\r\n        }\r\n      } else if(daysDiff < minRangeDuration) {\r\n        dateRangeLessThanMin = true;\r\n      }\r\n    }\r\n\r\n    if (!allowBackwardRangeSelect && daysDiff < 0) {\r\n      dateRangeLessThanMin = true;\r\n    }\r\n  }\r\n\r\n  dateOutOfRange = dateIsAfterMax || dateIsBeforeMin || dateIsDisabled || dateRangeLessThanMin || dateRangeGreaterThanMax;\r\n\r\n  let isThisDaySameAsSelectedStart = thisDay.isSame(selectedStartDate, 'day');\r\n  let isThisDaySameAsSelectedEnd = thisDay.isSame(selectedEndDate, 'day');\r\n  let isThisDateInSelectedRange =\r\n    selectedStartDate\r\n    && selectedEndDate\r\n    && thisDay.isBetween(selectedStartDate, selectedEndDate,'day','[]');\r\n\r\n  // If date is in range let's apply styles\r\n  if (!dateOutOfRange || isThisDaySameAsSelectedStart || isThisDaySameAsSelectedEnd || isThisDateInSelectedRange) {\r\n    // set today's style\r\n    let isToday = thisDay.isSame(today, 'day');\r\n    if (isToday) {\r\n      computedSelectedDayStyle = styles.selectedToday;\r\n      // todayTextStyle prop overrides selectedDayTextColor (created via makeStyles)\r\n      selectedDayTextStyle = [todayTextStyle || styles.selectedDayLabel, propSelectedDayTextStyle];\r\n    }\r\n\r\n    const custom = getCustomDateStyle({customDatesStyles, date: thisDay});\r\n\r\n    if (isToday && custom.style) {\r\n      // Custom date style overrides 'today' style. It may be reset below\r\n      // by date selection styling.\r\n      computedSelectedDayStyle = [styles.selectedToday, custom.style];\r\n    }\r\n\r\n    // set selected day style\r\n    if (!allowRangeSelection &&\r\n        selectedStartDate &&\r\n        isThisDaySameAsSelectedStart)\r\n    {\r\n      computedSelectedDayStyle = styles.selectedDay;\r\n      selectedDayTextStyle = [styles.selectedDayLabel, isToday && todayTextStyle, propSelectedDayTextStyle];\r\n      // selectedDayStyle prop overrides selectedDayColor (created via makeStyles)\r\n      selectedDayStyle = propSelectedDayStyle || styles.selectedDayBackground;\r\n    }\r\n\r\n    // Set selected ranges styles\r\n    if (allowRangeSelection) {\r\n      if (selectedStartDate && selectedEndDate) {\r\n        // Apply style for start date\r\n        if (isThisDaySameAsSelectedStart) {\r\n          computedSelectedDayStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\r\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\r\n        }\r\n        // Apply style for end date\r\n        if (isThisDaySameAsSelectedEnd) {\r\n          computedSelectedDayStyle = [styles.endDayWrapper, selectedRangeStyle, selectedRangeEndStyle];\r\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeEndTextStyle];\r\n        }\r\n        // Apply style if start date is the same as end date\r\n        if (isThisDaySameAsSelectedEnd &&\r\n            isThisDaySameAsSelectedStart &&\r\n            selectedEndDate.isSame(selectedStartDate, 'day'))\r\n        {\r\n          computedSelectedDayStyle = [styles.selectedDay, styles.selectedDayBackground, selectedRangeStyle];\r\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\r\n        }\r\n        // Apply style for days inside of range, excluding start & end dates.\r\n        if (thisDay.isBetween(selectedStartDate, selectedEndDate, 'day', '()')) {\r\n          computedSelectedDayStyle = [styles.inRangeDay, selectedRangeStyle];\r\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle];\r\n        }\r\n      }\r\n      // Apply style if start date has been selected but end date has not\r\n      if (selectedStartDate &&\r\n          !selectedEndDate &&\r\n          isThisDaySameAsSelectedStart)\r\n      {\r\n        computedSelectedDayStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\r\n        selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\r\n        // Override out of range start day text style when minRangeDuration = 1.\r\n        // This allows selected start date's text to be styled by selectedRangeStartTextStyle\r\n        // even when it's below minRangeDuration.\r\n        overrideOutOfRangeTextStyle = selectedRangeStartTextStyle;\r\n      }\r\n    }\r\n\r\n    if (dateOutOfRange) { // start or end date selected, and this date outside of range.\r\n      return (\r\n        <View style={[styles.dayWrapper, custom.containerStyle]}>\r\n          <View style={[custom.style, computedSelectedDayStyle, selectedDayStyle ]}>\r\n            <Text style={[styles.dayLabel, textStyle,\r\n              styles.disabledText, disabledDatesTextStyle,\r\n              styles.selectedDisabledText, selectedDisabledDatesTextStyle,\r\n              overrideOutOfRangeTextStyle\r\n            ]}>\r\n              { day }\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={[styles.dayWrapper, custom.containerStyle]}>\r\n          <TouchableOpacity\r\n            disabled={!enableDateChange}\r\n            style={[custom.style, computedSelectedDayStyle, selectedDayStyle ]}\r\n            onPress={() => onPressDay({year, month, day}) }>\r\n            <Text style={[styles.dayLabel, textStyle, custom.textStyle, selectedDayTextStyle]}>\r\n              { day }\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n  else {  // dateOutOfRange = true, and no selected start or end date.\r\n    const custom = getCustomDateStyle({customDatesStyles, date: thisDay});\r\n    // Allow customDatesStyles to override disabled dates if allowDisabled set\r\n    if (!custom.allowDisabled) {\r\n      custom.containerStyle = null;\r\n      custom.style = null;\r\n      custom.textStyle = null;\r\n    }\r\n    return (\r\n      <View style={[styles.dayWrapper, custom.containerStyle]}>\r\n        <View style={[styles.dayButton, custom.style]}>\r\n          <Text style={[textStyle, styles.disabledText, disabledDatesTextStyle, custom.textStyle]}>\r\n            { day }\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getCustomDateStyle({customDatesStyles, date}) {\r\n  if (Array.isArray(customDatesStyles)) {\r\n    for (let cds of customDatesStyles) {\r\n      if (date.isSame(moment(cds.date), 'day')) {\r\n        return {...cds};\r\n      }\r\n    }\r\n  }\r\n  else if (customDatesStyles instanceof Function) {\r\n    let cds = customDatesStyles(date) || {};\r\n    return {...cds};\r\n  }\r\n  return {};\r\n}\r\n\r\nDay.defaultProps = {\r\n  customDatesStyles: [],\r\n};\r\n\r\nDay.propTypes = {\r\n  styles: PropTypes.shape({}),\r\n  day: PropTypes.number,\r\n  onPressDay: PropTypes.func,\r\n  disabledDates: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\r\n  minRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n  maxRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}