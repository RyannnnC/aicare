{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/olivermou/Documents/GitHub/aicare/Scene/Health/enotes.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { MaterialCommunityIcons, FontAwesome } from '@expo/vector-icons';\nimport DataContext from \"../../providerContext\";\nimport I18n from \"../switchLanguage\";\nimport * as Permissions from \"expo-permissions\";\n\nvar Enotes = function (_Component) {\n  _inherits(Enotes, _Component);\n\n  var _super = _createSuper(Enotes);\n\n  function Enotes(props) {\n    var _this;\n\n    _classCallCheck(this, Enotes);\n\n    _this = _super.call(this, props);\n\n    _this.onSpeechStartHandler = function (e) {\n      console.log('onSpeechStart: ', e);\n    };\n\n    _this.onSpeechResultsHandler = function (e) {\n      console.log('onSpeechResults: ', e);\n\n      _this.setState({\n        complaint: e.value\n      });\n    };\n\n    _this.onSpeechEndHandler = function (e) {\n      console.log('onSpeechEnd: ', e);\n    };\n\n    _this.state = {\n      pressed: false,\n      pressed1: false,\n      complaint: '',\n      doctorComment: '',\n      patientComment: '',\n      id: null,\n      talk: false,\n      hasAudioPermission: null\n    };\n    return _this;\n  }\n\n  _createClass(Enotes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.setState({\n                id: this.props.route.params.id\n              });\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.AUDIO_RECORDING));\n\n            case 3:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n              this.setState({\n                hasAudioPermission: status === \"granted\"\n              });\n              this.queryPatient();\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"queryPatient\",\n    value: function queryPatient() {\n      var _this2 = this;\n\n      var url = 'http://' + this.context.url + '/aicare-business-api/business/medical-report/query-medical-info-by-appointment' + '?customerAppointmentId=' + this.props.route.params.id;\n      fetch(url, {\n        method: 'GET',\n        mode: 'cors',\n        credentials: 'include',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'sso-auth-token': this.context.token,\n          'sso-refresh-token': this.context.refresh_token,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Credentials': true,\n          'Access-Control-Allow-Headers': 'content-type, sso-auth-token',\n          'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        if (json.code === 0) {\n          _this2.setState({\n            image: json.medicalInfo.commentImg,\n            patientComment: json.medicalInfo.patientComment\n          });\n        } else {\n          console.log(json.msg);\n        }\n      }).catch(function (error) {\n        return console.warn(error);\n      });\n    }\n  }, {\n    key: \"startRecognizing\",\n    value: function startRecognizing() {\n      return _regeneratorRuntime.async(function startRecognizing$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Voice.start('en-US'));\n\n            case 3:\n              this.setState({\n                complaint: [],\n                talk: true\n              });\n              _context2.next = 9;\n              break;\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[0, 6]], Promise);\n    }\n  }, {\n    key: \"stopRecognizing\",\n    value: function stopRecognizing() {\n      return _regeneratorRuntime.async(function stopRecognizing$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(Voice.stop());\n\n            case 3:\n              this.setState({\n                talk: false\n              });\n              _context3.next = 9;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error(_context3.t0);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[0, 6]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 6\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#00ff00\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 10\n          }\n        }));\n      } else {\n        return React.createElement(KeyboardAvoidingView, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: \"white\"\n          },\n          behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 5\n          }\n        }, React.createElement(SafeAreaView, {\n          style: {\n            flex: 1,\n            width: '90%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 7\n          }\n        }, React.createElement(ScrollView, {\n          style: {\n            height: '90%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 7\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            marginTop: 10,\n            marginBottom: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            fontWeight: '500'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }\n        }, I18n.t('statement'))), React.createElement(Text, {\n          style: {\n            margin: '5%',\n            fontSize: 16,\n            fontWeight: '400'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }\n        }, this.state.patientComment), React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            marginTop: 10,\n            marginBottom: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            fontWeight: '500'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }\n        }, I18n.t('patientComplaint')), this.state.talk ? React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this3.stopRecognizing();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }\n        }, React.createElement(MaterialCommunityIcons, {\n          name: \"microphone-off\",\n          size: 24,\n          color: \"black\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }\n        })) : React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this3.startRecognizing();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"microphone\",\n          size: 24,\n          color: \"black\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }\n        }))), React.createElement(View, {\n          style: {\n            width: '100%',\n            height: 200,\n            borderWidth: 1,\n            borderColor: '#bbbbbb',\n            borderRadius: 11\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 9\n          }\n        }, React.createElement(TextInput, {\n          style: {\n            width: '90%',\n            height: '90%'\n          },\n          value: this.state.complaint,\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              complaint: text\n            });\n          },\n          multiline: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }\n        })), React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            marginBottom: 10,\n            marginTop: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            fontWeight: '500'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }\n        }, I18n.t('diagnosisSuggestion'))), React.createElement(View, {\n          style: {\n            width: '100%',\n            height: 200,\n            borderWidth: 1,\n            borderColor: '#bbbbbb',\n            borderRadius: 11,\n            marginBottom: 50\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 9\n          }\n        }, React.createElement(TextInput, {\n          style: {\n            width: '90%',\n            height: '90%'\n          },\n          value: this.state.doctorComment,\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              doctorComment: text\n            });\n          },\n          multiline: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 11\n          }\n        }))), React.createElement(View, {\n          style: {\n            height: '10%',\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: 10,\n            marginBottom: '10%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 7\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            width: '100%',\n            height: 40,\n            backgroundColor: '#68B0AB',\n            borderRadius: 20,\n            alignItems: 'center',\n            justifyContent: \"center\"\n          },\n          onPress: function onPress() {\n            _this3.props.navigation.navigate(I18n.t('enote3'), {\n              id: _this3.state.id,\n              patientComplaint: _this3.state.complaint,\n              doctorComplaint: _this3.state.doctorComment\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 7\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 16,\n            fontWeight: '400',\n            color: '#ffffff'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 9\n          }\n        }, I18n.t('nextStep')))), React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 9\n          }\n        })));\n      }\n    }\n  }]);\n\n  return Enotes;\n}(Component);\n\nexport { Enotes as default };\nEnotes.contextType = DataContext;","map":{"version":3,"sources":["/Users/olivermou/Documents/GitHub/aicare/Scene/Health/enotes.js"],"names":["React","Component","MaterialCommunityIcons","FontAwesome","DataContext","I18n","Permissions","Enotes","props","onSpeechStartHandler","e","console","log","onSpeechResultsHandler","setState","complaint","value","onSpeechEndHandler","state","pressed","pressed1","doctorComment","patientComment","id","talk","hasAudioPermission","route","params","askAsync","AUDIO_RECORDING","status","queryPatient","url","context","fetch","method","mode","credentials","headers","token","refresh_token","then","response","json","code","image","medicalInfo","commentImg","msg","catch","error","warn","Voice","start","stop","isLoading","flex","justifyContent","alignItems","backgroundColor","Platform","OS","width","height","flexDirection","marginTop","marginBottom","fontSize","fontWeight","t","margin","stopRecognizing","startRecognizing","borderWidth","borderColor","borderRadius","text","navigation","navigate","patientComplaint","doctorComplaint","color","contextType"],"mappings":"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","sourcesContent":["import React ,{Component}from 'react';\nimport { KeyboardAvoidingView,Text,  View, Alert, Image,TouchableOpacity,ScrollView,SafeAreaView,TextInput,Platform,ActivityIndicator } from 'react-native';\nimport { MaterialCommunityIcons,  FontAwesome} from '@expo/vector-icons';\nimport DataContext from '../../providerContext';\nimport I18n from '../switchLanguage';\n//import Voice from '@react-native-community/voice';\nimport * as Permissions from \"expo-permissions\";\n\nexport default class Enotes extends Component {\n    constructor(props) {\n      super(props);\n  //    Voice.onSpeechStart = this.onSpeechStartHandler.bind(this);\n  //    Voice.onSpeechEnd = this.onSpeechEndHandler.bind(this);\n  //    Voice.onSpeechResults = this.onSpeechResultsHandler.bind(this);\n      this.state={\n      pressed:false,\n      pressed1:false,\n      complaint:'',\n      doctorComment:'',\n      patientComment:'',\n      id:null,\n      talk:false,\n      hasAudioPermission: null,\n      }\n    }\n  onSpeechStartHandler = (e) => {\n    //Invoked when .start() is called without error\n    console.log('onSpeechStart: ', e);\n  };\n\n  onSpeechResultsHandler = (e) => {\n    //Invoked when SpeechRecognizer is finished recognizing\n    console.log('onSpeechResults: ', e);\n    this.setState({complaint:e.value});\n  };\n\n  onSpeechEndHandler = (e) => {\n    //Invoked when SpeechRecognizer stops recognition\n    console.log('onSpeechEnd: ', e);\n  };\n\n  async componentDidMount(){\n      this.setState({id:this.props.route.params.id});\n      const { status } = await Permissions.askAsync(Permissions.AUDIO_RECORDING);\n      this.setState({ hasAudioPermission: status === \"granted\" });\n      this.queryPatient();\n  }\n\n  queryPatient() {\n    let url = 'http://'\n    +this.context.url\n    +'/aicare-business-api/business/medical-report/query-medical-info-by-appointment'\n    +'?customerAppointmentId='+this.props.route.params.id ;\n    fetch(url,{\n      method: 'GET',\n      mode: 'cors',\n      credentials: 'include',\n      headers: {\n      'Accept':       'application/json',\n      'Content-Type': 'application/json',\n      'sso-auth-token': this.context.token,\n      'sso-refresh-token': this.context.refresh_token,\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Credentials': true,\n      'Access-Control-Allow-Headers': 'content-type, sso-auth-token',\n      'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE',\n    }})\n    .then((response) => response.json())\n    .then((json) => {\n      if (json.code === 0) {\n        this.setState({\n          image:json.medicalInfo.commentImg,\n          patientComment:json.medicalInfo.patientComment,\n        })\n      } else {\n        console.log(json.msg)\n      }\n    })\n    .catch(error => console.warn(error));\n  }\n\n  async startRecognizing() {\n    //Starts listening for speech for a specific locale\n    try   {\n      await Voice.start('en-US');\n      this.setState({\n        complaint:[],\n        talk:true,\n      });\n    }   catch (e) {\n      //eslint-disable-next-line\n      console.error(e);\n    }\n  };\n  async stopRecognizing()  {\n    //Stops listening for speech\n    try {\n      await Voice.stop();\n      this.setState({\n        talk:false,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n    /*\n        <View style={{marginTop:15}}>\n          <Text style={{ fontSize:18, fontWeight: '500' }}>{I18n.t('emRecord')}</Text>\n        </View>\n        <TouchableOpacity style={{flexDirection: 'row', marginTop:10, marginBottom:10}} onPress={() => {this.setState({pressed:!this.state.pressed})}}>\n          <Text style={{ fontSize:16, fontWeight: '400' }}>{I18n.t('basicMedicalHistory')}</Text>\n          <AntDesign name=\"down\" size={18} color=\"black\" />\n        </TouchableOpacity>\n       {this.state.pressed &&\n        <View>\n        <TouchableOpacity style={{flexDirection: 'row', marginTop:10, marginBottom:10}} onPress={() => {this.setState({pressed:!this.state.pressed})}}>\n          <Text style={{ fontSize:16, fontWeight: '400' }}>{I18n.t('orginfo')}</Text>\n          <AntDesign name=\"down\" size={18} color=\"black\" />\n        </TouchableOpacity>\n        <TouchableOpacity style={{flexDirection: 'row', marginTop:10, marginBottom:10}} onPress={() => {this.setState({pressed:!this.state.pressed})}}>\n          <Text style={{ fontSize:16, fontWeight: '400' }}>{I18n.t('personalRecord')}</Text>\n          <AntDesign name=\"down\" size={18} color=\"black\" />\n        </TouchableOpacity>\n        <TouchableOpacity style={{flexDirection: 'row', marginTop:10, marginBottom:10}} onPress={() => {this.setState({pressed:!this.state.pressed})}}>\n          <Text style={{ fontSize:16, fontWeight: '400' }}>{I18n.t('personalMedicine')}</Text>\n          <AntDesign name=\"down\" size={18} color=\"black\" />\n        </TouchableOpacity>\n        </View>\n        }\n        <TouchableOpacity style={{flexDirection: 'row', marginTop:10, marginBottom:10}} onPress={() => {this.setState({pressed1:!this.state.pressed})}}>\n          <Text style={{ fontSize:16, fontWeight: '400' }}>{I18n.t('historyRecord')}</Text>\n          <AntDesign name=\"down\" size={18} color=\"black\" />\n        </TouchableOpacity>*/\n  render() {\n    if (this.state.isLoading){\n      return(\n     <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n         <ActivityIndicator size=\"large\" color=\"#00ff00\"  />\n      </View>\n    )\n    }else {\n    return (\n    <KeyboardAvoidingView style={{ flex:1, justifyContent: \"center\", alignItems: \"center\" ,backgroundColor:\"white\"}}\n    behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\n      <SafeAreaView style={{flex:1,width:'90%'}}>\n      <ScrollView style={{height:'90%'}}>\n\n        <View style={{flexDirection: 'row', marginTop:10, marginBottom:10}}>\n          <Text style={{ fontSize:18, fontWeight: '500'}}>{I18n.t('statement')}</Text>\n        </View>\n          <Text style={{margin:'5%',fontSize:16, fontWeight: '400'}}>{this.state.patientComment}</Text>\n\n        \n        <View style={{flexDirection: 'row', marginTop:10, marginBottom:10}}>\n          <Text style={{ fontSize:18, fontWeight: '500'}}>{I18n.t('patientComplaint')}</Text>\n          {this.state.talk ?\n            <TouchableOpacity onPress={() => {this.stopRecognizing()}}>\n              <MaterialCommunityIcons name=\"microphone-off\" size={24} color=\"black\" />\n            </TouchableOpacity>\n            :\n            <TouchableOpacity onPress={() => {this.startRecognizing()}}>\n              <FontAwesome name=\"microphone\" size={24} color=\"black\" />\n            </TouchableOpacity>\n          }\n        </View>\n\n        <View style={{width:'100%', height:200,borderWidth:1, borderColor:'#bbbbbb',borderRadius:11}}>\n          <TextInput style={{width:'90%',height:'90%'}}\n            value={this.state.complaint}\n            onChangeText={(text) => {this.setState({complaint:text})}}\n            multiline={true}\n          />\n        </View>\n\n        <View style={{flexDirection: 'row', marginBottom:10,marginTop:10}}>\n          <Text style={{ fontSize:18, fontWeight: '500' }}>{I18n.t('diagnosisSuggestion')}</Text>\n        </View>\n        <View style={{width:'100%', height:200,borderWidth:1, borderColor:'#bbbbbb',borderRadius:11,marginBottom:50}}>\n          <TextInput style={{width:'90%',height:'90%'}}\n            value={this.state.doctorComment}\n            onChangeText={(text) => {this.setState({doctorComment:text})}}\n            multiline={true}\n          />\n        </View>\n\n      </ScrollView>\n      <View  style={{ height:'10%',flex:1, justifyContent: \"center\", alignItems: \"center\",marginTop:10,marginBottom:'10%'}}>\n      <TouchableOpacity style={{\n        width: '100%',\n        height: 40,\n        backgroundColor: '#68B0AB',\n        borderRadius: 20,\n        alignItems: 'center',\n        justifyContent: \"center\",}} onPress={() => {\n        this.props.navigation.navigate(I18n.t('enote3'),{id: this.state.id,patientComplaint:this.state.complaint,doctorComplaint:this.state.doctorComment})\n        }}>\n        <Text style={{ fontSize:16, fontWeight: '400', color: '#ffffff' }}>{I18n.t('nextStep')}</Text>\n      </TouchableOpacity>\n      </View>\n        <View style={{ flex : 1 }} />\n      </SafeAreaView>\n    </KeyboardAvoidingView>\n  );}}\n}\nEnotes.contextType = DataContext;\n"]},"metadata":{},"sourceType":"module"}