{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Github\\\\aicare\\\\node_modules\\\\react-native-simple-time-picker\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Picker } from '@react-native-picker/picker';\nimport { zeroPad } from \"./utils/zeroPad\";\nvar MAX_HOURS = 23;\nvar MAX_MINUTES = 59;\nexport function TimePicker(_ref) {\n  var _value$hours,\n      _value$minutes,\n      _this = this;\n\n  var value = _ref.value,\n      onChange = _ref.onChange,\n      hoursUnit = _ref.hoursUnit,\n      minutesUnit = _ref.minutesUnit,\n      _ref$zeroPadding = _ref.zeroPadding,\n      zeroPadding = _ref$zeroPadding === void 0 ? false : _ref$zeroPadding;\n\n  var _useState = useState((_value$hours = value == null ? void 0 : value.hours) != null ? _value$hours : 0),\n      _useState2 = _slicedToArray(_useState, 2),\n      internalHours = _useState2[0],\n      setInternalHours = _useState2[1];\n\n  var _useState3 = useState((_value$minutes = value == null ? void 0 : value.minutes) != null ? _value$minutes : 0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      internalMinutes = _useState4[0],\n      setInternalMinutes = _useState4[1];\n\n  useEffect(function () {\n    setInternalHours(value == null ? void 0 : value.hours);\n    setInternalMinutes(value == null ? void 0 : value.minutes);\n  }, [value]);\n\n  var getLabel = function getLabel(i, unit) {\n    var numString = zeroPadding ? zeroPad(i) : i.toString();\n    return numString + \" \" + (unit != null ? unit : '');\n  };\n\n  var getHoursItems = function getHoursItems() {\n    var items = [];\n\n    for (var i = 0; i <= MAX_HOURS; i++) {\n      items.push(React.createElement(Picker.Item, {\n        key: i,\n        value: i,\n        label: getLabel(i, hoursUnit),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return items;\n  };\n\n  var getMinutesItems = function getMinutesItems() {\n    var items = [];\n\n    for (var i = 0; i <= MAX_MINUTES; i++) {\n      items.push(React.createElement(Picker.Item, {\n        key: i,\n        value: i,\n        label: getLabel(i, minutesUnit),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return items;\n  };\n\n  var handleChangeHours = function handleChangeHours(hours) {\n    setInternalHours(hours);\n    var newValue = {\n      minutes: internalMinutes,\n      hours: hours\n    };\n    onChange == null ? void 0 : onChange(newValue);\n  };\n\n  var handleChangeMinutes = function handleChangeMinutes(minutes) {\n    setInternalMinutes(minutes);\n    var newValue = {\n      minutes: minutes,\n      hours: internalHours\n    };\n    onChange == null ? void 0 : onChange(newValue);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(Picker, {\n    style: styles.picker,\n    selectedValue: internalHours,\n    onValueChange: function onValueChange(itemValue) {\n      return handleChangeHours(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, getHoursItems()), React.createElement(Picker, {\n    style: styles.picker,\n    selectedValue: internalMinutes,\n    onValueChange: function onValueChange(itemValue) {\n      return handleChangeMinutes(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, getMinutesItems()));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  },\n  picker: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["F:/Github/aicare/node_modules/react-native-simple-time-picker/index.js"],"names":["React","useEffect","useState","Picker","zeroPad","MAX_HOURS","MAX_MINUTES","TimePicker","value","onChange","hoursUnit","minutesUnit","zeroPadding","hours","internalHours","setInternalHours","minutes","internalMinutes","setInternalMinutes","getLabel","i","unit","numString","toString","getHoursItems","items","push","getMinutesItems","handleChangeHours","newValue","handleChangeMinutes","styles","container","picker","itemValue","StyleSheet","create","flexDirection","flex"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport { zeroPad } from './utils/zeroPad';\n\nconst MAX_HOURS = 23;\nconst MAX_MINUTES = 59;\n\nexport function TimePicker({\n  value,\n  onChange,\n  hoursUnit,\n  minutesUnit,\n  zeroPadding = false,\n}) {\n  const [internalHours, setInternalHours] = useState(value?.hours ?? 0);\n  const [internalMinutes, setInternalMinutes] = useState(value?.minutes ?? 0);\n\n  useEffect(() => {\n    setInternalHours(value?.hours);\n    setInternalMinutes(value?.minutes);\n  }, [value]);\n\n  const getLabel = (i, unit) => {\n    const numString = zeroPadding ? zeroPad(i) : i.toString();\n    return `${numString} ${unit ?? ''}`;\n  };\n\n  const getHoursItems = () => {\n    const items = [];\n    for (let i = 0; i <= MAX_HOURS; i++) {\n      items.push(\n        <Picker.Item key={i} value={i} label={getLabel(i, hoursUnit)} />,\n      );\n    }\n    return items;\n  };\n\n  const getMinutesItems = () => {\n    const items = [];\n    for (let i = 0; i <= MAX_MINUTES; i++) {\n      items.push(\n        <Picker.Item key={i} value={i} label={getLabel(i, minutesUnit)} />,\n      );\n    }\n    return items;\n  };\n\n  const handleChangeHours = hours => {\n    setInternalHours(hours);\n    const newValue = {\n      minutes: internalMinutes,\n      hours,\n    };\n    onChange?.(newValue);\n  };\n\n  const handleChangeMinutes = minutes => {\n    setInternalMinutes(minutes);\n    const newValue = {\n      minutes,\n      hours: internalHours,\n    };\n    onChange?.(newValue);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Picker\n        style={styles.picker}\n        selectedValue={internalHours}\n        onValueChange={itemValue => handleChangeHours(itemValue)}\n      >\n        {getHoursItems()}\n      </Picker>\n      <Picker\n        style={styles.picker}\n        selectedValue={internalMinutes}\n        onValueChange={itemValue => handleChangeMinutes(itemValue)}\n      >\n        {getMinutesItems()}\n      </Picker>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  picker: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}