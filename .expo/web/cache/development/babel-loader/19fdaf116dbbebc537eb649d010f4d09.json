{"ast":null,"code":"var _locales$;\n\nimport I18n from 'react-native-i18n';\nimport React, { Component } from 'react';\nimport * as RNLocalize from \"react-native-localize\";\nimport cn from \"./cn\";\nimport en from \"./en\";\nimport DataContext from \"../providerContext\";\nvar locales = RNLocalize.getLocales();\nvar systemLanguage = (_locales$ = locales[0]) == null ? void 0 : _locales$.languageCode;\nvar userLanguage = this.context.userLanguage.userLanguage;\n\nif (userLanguage) {\n  I18n.locale = userLanguage;\n} else if (systemLanguage) {\n  I18n.locale = systemLanguage;\n} else {\n  I18n.locale = 'zh';\n}\n\nI18n.fallbacks = true;\nI18n.translations = {\n  zh: cn,\n  en: en\n};\nI18n.contextType = DataContext;\nexport default I18n;","map":{"version":3,"sources":["F:/Github/aicare/Scene/language.js"],"names":["I18n","React","Component","RNLocalize","cn","en","DataContext","locales","getLocales","systemLanguage","languageCode","userLanguage","context","locale","fallbacks","translations","zh","contextType"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA8B,OAA9B;AACA,OAAO,KAAKC,UAAZ,MAA4B,uBAA5B;AACA,OAAOC,EAAP;AACA,OAAOC,EAAP;AACA,OAAOC,WAAP;AAEA,IAAMC,OAAO,GAAGJ,UAAU,CAACK,UAAX,EAAhB;AACA,IAAMC,cAAc,gBAAGF,OAAO,CAAC,CAAD,CAAV,qBAAG,UAAYG,YAAnC;IACOC,Y,GAAgB,KAAKC,OAAL,CAAaD,Y,CAA7BA,Y;;AAEP,IAAIA,YAAJ,EAAkB;AAChBX,EAAAA,IAAI,CAACa,MAAL,GAAcF,YAAd;AACD,CAFD,MAEO,IAAIF,cAAJ,EAAoB;AACzBT,EAAAA,IAAI,CAACa,MAAL,GAAcJ,cAAd;AACD,CAFM,MAEA;AACLT,EAAAA,IAAI,CAACa,MAAL,GAAc,IAAd;AACD;;AAEDb,IAAI,CAACc,SAAL,GAAiB,IAAjB;AACAd,IAAI,CAACe,YAAL,GAAoB;AAClBC,EAAAA,EAAE,EAACZ,EADe;AAElBC,EAAAA,EAAE,EAAFA;AAFkB,CAApB;AAKAL,IAAI,CAACiB,WAAL,GAAmBX,WAAnB;AACA,eAAeN,IAAf","sourcesContent":["import I18n from 'react-native-i18n';\r\nimport React ,{Component}from 'react';\r\nimport * as RNLocalize from \"react-native-localize\";\r\nimport cn from './cn';\r\nimport en from './en';\r\nimport DataContext from \"../providerContext\";\r\n\r\nconst locales = RNLocalize.getLocales();\r\nconst systemLanguage = locales[0]?.languageCode;  // 用户系统偏好语言\r\nconst {userLanguage} = this.context.userLanguage;\r\n\r\nif (userLanguage) {\r\n  I18n.locale = userLanguage;\r\n} else if (systemLanguage) {\r\n  I18n.locale = systemLanguage;\r\n} else {\r\n  I18n.locale = 'zh';  // 默认语言为英文\r\n}\r\n\r\nI18n.fallbacks = true;\r\nI18n.translations = {\r\n  zh:cn,\r\n  en,\r\n};\r\n\r\nI18n.contextType = DataContext;\r\nexport default I18n;\r\n"]},"metadata":{},"sourceType":"module"}