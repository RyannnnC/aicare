{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Github\\\\aicare\\\\Scene\\\\login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { styles } from \"../style\";\nimport DataContext from \"../App\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"loginRequest\",\n    value: function loginRequest() {\n      var _this2 = this;\n\n      var s = this.state;\n      var errors = [];\n\n      if (s.name.length === 0) {\n        errors.push(\"Enter a password\");\n      }\n\n      if (s.password.length === 0) {\n        errors.push(\"Enter a password\");\n      }\n\n      var url = 'http://13.239.57.130:8080/aicaredb/login/provider?' + 'username=' + s.name + '&password=' + s.password;\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        if (response.status === 500) {\n          Alert.alert(\"Invalid username or password\");\n          return false;\n        } else {\n          console.log(\"login success\");\n\n          _this2.context.action.changeLogin(true);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }\n      }, React.createElement(Image, {\n        style: styles.img3,\n        source: require(\"../images/welcome.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }), React.createElement(Image, {\n        style: styles.img_ac,\n        source: require(\"../images/account.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.account,\n        placeholder: \"xxxxx@gmail.com\",\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            name: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }), React.createElement(Image, {\n        style: styles.img_pw,\n        source: require(\"../images/password.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }), React.createElement(TextInput, {\n        style: styles.password,\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            password: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: styles.container2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.f_wrapper,\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('忘记密码');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.f_Text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, \"\\u5FD8\\u8BB0\\u5BC6\\u7801\\uFF1F\")), React.createElement(TouchableOpacity, {\n        style: styles.z_wrapper,\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('注册');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.r_Text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, \"\\u6CE8\\u518C\\u8D26\\u6237\"))), React.createElement(TouchableOpacity, {\n        style: styles.loginWrapper,\n        onPress: function onPress() {\n          return _this3.loginRequest();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.onsite_Text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, \"\\u767B\\u9646\")), React.createElement(Image, {\n        style: styles.img4,\n        source: require(\"../images/logo.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["F:/Github/aicare/Scene/login.js"],"names":["React","Component","styles","DataContext","Login","state","name","password","s","errors","length","push","url","fetch","method","headers","then","response","status","Alert","alert","console","log","context","action","changeLogin","container","img3","require","img_ac","account","text","setState","img_pw","container2","f_wrapper","props","navigation","navigate","f_Text","z_wrapper","r_Text","loginWrapper","loginRequest","onsite_Text","img4"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport { Text, Button, View, Alert, Image,TouchableOpacity,Switch,TextInput } from 'react-native';\r\nimport {styles} from '../style';\r\nimport DataContext from \"../App\";\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    name:\"\",\r\n    password:\"\",\r\n  }\r\n  loginRequest() {\r\n    let s = this.state;\r\n    let errors=[];\r\n    if (s.name.length === 0) {\r\n        errors.push(\"Enter a password\");\r\n    }\r\n    if (s.password.length === 0) {\r\n        errors.push(\"Enter a password\");\r\n    }\r\n    let url = 'http://13.239.57.130:8080/aicaredb/login/provider?'\r\n    +'username='+ s.name\r\n    +'&password=' + s.password;\r\n    fetch(url,{\r\n      method: 'POST',\r\n      headers: {\r\n      'Accept':       'application/json',\r\n      'Content-Type': 'application/json',\r\n      }\r\n    })\r\n    .then((response) => {\r\n        if (response.status === 500) {\r\n            Alert.alert(\"Invalid username or password\");\r\n            return false;\r\n        } else {\r\n            console.log(\"login success\");\r\n            this.context.action.changeLogin(true);\r\n        }\r\n    })\r\n\r\n  }\r\n  render(){\r\n  return (\r\n    <View style = {styles.container}>\r\n      <Image style = {styles.img3}\r\n        source = {require('../images/welcome.png')}\r\n      />\r\n          <Image style = {styles.img_ac}\r\n        source = {require('../images/account.png')}\r\n      />\r\n      <TextInput\r\n      style = {styles.account}\r\n      placeholder=\"xxxxx@gmail.com\"\r\n      onChangeText={(text) => {this.setState({ name: text})}}\r\n      />\r\n      <Image style = {styles.img_pw}\r\n        source = {require('../images/password.png')}\r\n      />\r\n      <TextInput\r\n      style = {styles.password}\r\n      onChangeText={(text) => {this.setState({ password: text})}}\r\n      />\r\n      <View style ={styles.container2}>\r\n        <TouchableOpacity style={styles.f_wrapper} onPress={() => this.props.navigation.navigate('忘记密码')}>\r\n          <Text style={styles.f_Text}>忘记密码？</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.z_wrapper} onPress={() => this.props.navigation.navigate('注册')}>\r\n          <Text style={styles.r_Text}>注册账户</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <TouchableOpacity style={styles.loginWrapper} onPress = {()=>this.loginRequest()}>\r\n        <Text style={styles.onsite_Text}>登陆</Text>\r\n      </TouchableOpacity>\r\n      <Image style = {styles.img4}\r\n        source = {require('../images/logo.png')}\r\n      />\r\n    </View>\r\n  );}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}