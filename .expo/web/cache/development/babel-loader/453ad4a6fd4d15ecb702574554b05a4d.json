{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/olivermou/Documents/GitHub/aicare/Scene/Health/dateSelect.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CalendarPicker from 'react-native-calendar-picker';\nimport { styles } from \"../../style\";\nimport { StackActions } from '@react-navigation/native';\nimport DataContext from \"../../providerContext\";\n\nvar DateSelect = function (_Component) {\n  _inherits(DateSelect, _Component);\n\n  var _super = _createSuper(DateSelect);\n\n  function DateSelect(props) {\n    var _this;\n\n    _classCallCheck(this, DateSelect);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selectedStartDate: null,\n      duration: 0\n    };\n    _this.onDateChange = _this.onDateChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DateSelect, [{\n    key: \"onDateChange\",\n    value: function onDateChange(date) {\n      this.setState({\n        selectedStartDate: date\n      });\n      this.context.action.changetime(date.toString().substring(0, 15));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var state = this.context;\n      var navigation = this.props.navigation;\n      var selectedStartDate = this.state.selectedStartDate;\n      var duration = this.state.duration;\n      var startDate = selectedStartDate ? selectedStartDate.toString() : '';\n      return React.createElement(View, {\n        style: {\n          backgroundColor: '#F7FAFA',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#006A71',\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, \"\\u9884\\u7EA6\\u65F6\\u95F4\"), React.createElement(CalendarPicker, {\n        onDateChange: this.onDateChange,\n        previousTitle: \"\\u4E0A\\u4E00\\u6708\",\n        nextTitle: \"\\u4E0B\\u4E00\\u6708\",\n        width: 300,\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: '#006A71',\n          fontSize: 16,\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, \"\\u65F6\\u95F4\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          marginTop: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          marginLeft: 30,\n          marginRight: 10,\n          height: 35,\n          width: 80,\n          borderBottomColor: '#999999',\n          borderBottomWidth: 1\n        },\n        placeholder: \"24\\u65F6\\u683C\\u5F0F\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, \"\\u81F3\"), React.createElement(TextInput, {\n        style: {\n          marginLeft: 10,\n          marginRight: 30,\n          height: 35,\n          width: 80,\n          borderBottomColor: '#999999',\n          borderBottomWidth: 1\n        },\n        placeholder: \"24\\u65F6\\u683C\\u5F0F\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return DateSelect;\n}(Component);\n\nexport { DateSelect as default };\nDateSelect.contextType = DataContext;","map":{"version":3,"sources":["/Users/olivermou/Documents/GitHub/aicare/Scene/Health/dateSelect.js"],"names":["React","Component","CalendarPicker","styles","StackActions","DataContext","DateSelect","props","state","selectedStartDate","duration","onDateChange","bind","date","setState","context","action","changetime","toString","substring","navigation","startDate","backgroundColor","alignItems","justifyContent","color","fontSize","marginTop","flexDirection","marginLeft","marginRight","height","width","borderBottomColor","borderBottomWidth","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  StyleSheet, Text, Button, View, Alert, Image,TouchableOpacity,Switch,TextInput,ScrollView\n} from 'react-native';\nimport CalendarPicker from 'react-native-calendar-picker';\nimport {styles} from '../../style';\nimport { StackActions } from '@react-navigation/native';\nimport DataContext from \"../../providerContext\";\n\n\nexport default class DateSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedStartDate: null,\n      duration:0,\n    };\n    this.onDateChange = this.onDateChange.bind(this);\n  }\n\n  onDateChange(date) {\n    this.setState({\n      selectedStartDate: date,\n    });\n    this.context.action.changetime(date.toString().substring(0, 15));\n  }\n\n\n  render() {\n    let state = this.context;\n    const { navigation } = this.props;\n    const { selectedStartDate } = this.state;\n    const duration = this.state.duration;\n    const startDate = selectedStartDate ? selectedStartDate.toString() : '';\n\n    return (\n\n      <View style={{backgroundColor: '#F7FAFA',  alignItems: 'center',justifyContent:'center'}}>\n        <Text style = {{ color:'#006A71',fontSize:16}}>预约时间</Text>\n        <CalendarPicker\n          onDateChange={this.onDateChange}\n          previousTitle=\"上一月\"\n          nextTitle = \"下一月\"\n          width = {300}\n          height = {300}\n        />\n        <Text style = {{ color:'#006A71',fontSize:16,marginTop:10}}>时间</Text>\n        <View style ={{ flexDirection: 'row', marginTop: 30 }}>\n          <TextInput style = {{\n              marginLeft: 30,\n              marginRight:10,\n              height: 35,\n              width: 80,\n              borderBottomColor: '#999999',\n              borderBottomWidth:1}} placeholder=\"24时格式\"/>\n          <Text>至</Text>\n          <TextInput style = {{\n              marginLeft: 10,\n              marginRight:30,\n              height: 35,\n              width: 80,\n              borderBottomColor: '#999999',\n              borderBottomWidth:1}} placeholder=\"24时格式\"/>\n        </View>\n      </View>\n    );\n  }\n}\nDateSelect.contextType = DataContext;\n"]},"metadata":{},"sourceType":"module"}