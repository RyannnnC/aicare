{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Github\\\\aicare\\\\node_modules\\\\react-native-signature-canvas\\\\index.js\";\n\nimport React, { useState, useMemo, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport htmlContent from \"./h5/html\";\nimport injectedSignaturePad from \"./h5/js/signature_pad\";\nimport injectedApplication from \"./h5/js/app\";\nimport { WebView } from \"react-native-webview\";\nvar styles = StyleSheet.create({\n  webBg: {\n    width: \"100%\",\n    backgroundColor: \"#FFF\",\n    flex: 1\n  },\n  loadingOverlayContainer: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nvar SignatureView = forwardRef(function (_ref, ref) {\n  var _ref$webStyle = _ref.webStyle,\n      webStyle = _ref$webStyle === void 0 ? \"\" : _ref$webStyle,\n      _ref$onOK = _ref.onOK,\n      onOK = _ref$onOK === void 0 ? function () {} : _ref$onOK,\n      _ref$onEmpty = _ref.onEmpty,\n      onEmpty = _ref$onEmpty === void 0 ? function () {} : _ref$onEmpty,\n      _ref$onClear = _ref.onClear,\n      onClear = _ref$onClear === void 0 ? function () {} : _ref$onClear,\n      _ref$onBegin = _ref.onBegin,\n      onBegin = _ref$onBegin === void 0 ? function () {} : _ref$onBegin,\n      _ref$onEnd = _ref.onEnd,\n      onEnd = _ref$onEnd === void 0 ? function () {} : _ref$onEnd,\n      _ref$descriptionText = _ref.descriptionText,\n      descriptionText = _ref$descriptionText === void 0 ? \"Sign above\" : _ref$descriptionText,\n      _ref$clearText = _ref.clearText,\n      clearText = _ref$clearText === void 0 ? \"Clear\" : _ref$clearText,\n      _ref$confirmText = _ref.confirmText,\n      confirmText = _ref$confirmText === void 0 ? \"Confirm\" : _ref$confirmText,\n      _ref$customHtml = _ref.customHtml,\n      customHtml = _ref$customHtml === void 0 ? null : _ref$customHtml,\n      _ref$autoClear = _ref.autoClear,\n      autoClear = _ref$autoClear === void 0 ? false : _ref$autoClear,\n      _ref$trimWhitespace = _ref.trimWhitespace,\n      trimWhitespace = _ref$trimWhitespace === void 0 ? false : _ref$trimWhitespace,\n      _ref$rotated = _ref.rotated,\n      rotated = _ref$rotated === void 0 ? false : _ref$rotated,\n      _ref$imageType = _ref.imageType,\n      imageType = _ref$imageType === void 0 ? \"\" : _ref$imageType,\n      _ref$dataURL = _ref.dataURL,\n      dataURL = _ref$dataURL === void 0 ? \"\" : _ref$dataURL,\n      _ref$penColor = _ref.penColor,\n      penColor = _ref$penColor === void 0 ? \"\" : _ref$penColor,\n      _ref$backgroundColor = _ref.backgroundColor,\n      backgroundColor = _ref$backgroundColor === void 0 ? \"\" : _ref$backgroundColor,\n      _ref$dotSize = _ref.dotSize,\n      dotSize = _ref$dotSize === void 0 ? 0 : _ref$dotSize,\n      _ref$minWidth = _ref.minWidth,\n      minWidth = _ref$minWidth === void 0 ? 0.5 : _ref$minWidth,\n      _ref$androidHardwareA = _ref.androidHardwareAccelerationDisabled,\n      androidHardwareAccelerationDisabled = _ref$androidHardwareA === void 0 ? false : _ref$androidHardwareA,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? null : _ref$style;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var webViewRef = useRef();\n  var source = useMemo(function () {\n    var injectedJavaScript = injectedSignaturePad + injectedApplication;\n    var htmlContentValue = customHtml ? customHtml : htmlContent;\n    injectedJavaScript = injectedJavaScript.replace(/<%autoClear%>/g, autoClear);\n    injectedJavaScript = injectedJavaScript.replace(/<%trimWhitespace%>/g, trimWhitespace);\n    injectedJavaScript = injectedJavaScript.replace(/<%imageType%>/g, imageType);\n    injectedJavaScript = injectedJavaScript.replace(/<%dataURL%>/g, dataURL);\n    injectedJavaScript = injectedJavaScript.replace(/<%penColor%>/g, penColor);\n    injectedJavaScript = injectedJavaScript.replace(/<%backgroundColor%>/g, backgroundColor);\n    injectedJavaScript = injectedJavaScript.replace(/<%dotSize%>/g, dotSize);\n    injectedJavaScript = injectedJavaScript.replace(/<%minWidth%>/g, minWidth);\n    var html = htmlContentValue(injectedJavaScript);\n    html = html.replace(/<%style%>/g, webStyle);\n    html = html.replace(/<%description%>/g, descriptionText);\n    html = html.replace(/<%confirm%>/g, confirmText);\n    html = html.replace(/<%clear%>/g, clearText);\n    html = html.replace(/<%orientation%>/g, rotated);\n    return {\n      html: html\n    };\n  }, [customHtml, autoClear, trimWhitespace, rotated, imageType, webStyle, descriptionText, confirmText, clearText, dataURL]);\n\n  var getSignature = function getSignature(e) {\n    switch (e.nativeEvent.data) {\n      case \"BEGIN\":\n        onBegin();\n        break;\n\n      case \"END\":\n        onEnd();\n        break;\n\n      case \"EMPTY\":\n        onEmpty();\n        break;\n\n      case \"CLEAR\":\n        onClear();\n        break;\n\n      default:\n        onOK(e.nativeEvent.data);\n    }\n  };\n\n  useImperativeHandle(ref, function () {\n    return {\n      readSignature: function readSignature() {\n        if (webViewRef.current) {\n          webViewRef.current.injectJavaScript(\"readSignature();true;\");\n        }\n      },\n      clearSignature: function clearSignature() {\n        if (webViewRef.current) {\n          webViewRef.current.injectJavaScript(\"clearSignature();true;\");\n        }\n      }\n    };\n  }, [webViewRef]);\n\n  var renderError = function renderError(e) {\n    var nativeEvent = e.nativeEvent;\n    console.warn(\"WebView error: \", nativeEvent);\n  };\n\n  return React.createElement(View, {\n    style: [styles.webBg, style],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, React.createElement(WebView, {\n    bounces: false,\n    androidHardwareAccelerationDisabled: androidHardwareAccelerationDisabled,\n    ref: webViewRef,\n    useWebKit: true,\n    source: source,\n    onMessage: getSignature,\n    javaScriptEnabled: true,\n    onError: renderError,\n    onLoadEnd: function onLoadEnd() {\n      return setLoading(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), loading && React.createElement(View, {\n    style: styles.loadingOverlayContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, React.createElement(ActivityIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })));\n});\nexport default SignatureView;","map":{"version":3,"sources":["F:/Github/aicare/node_modules/react-native-signature-canvas/index.js"],"names":["React","useState","useMemo","useRef","forwardRef","useImperativeHandle","htmlContent","injectedSignaturePad","injectedApplication","WebView","styles","StyleSheet","create","webBg","width","backgroundColor","flex","loadingOverlayContainer","position","top","bottom","left","right","alignItems","justifyContent","SignatureView","ref","webStyle","onOK","onEmpty","onClear","onBegin","onEnd","descriptionText","clearText","confirmText","customHtml","autoClear","trimWhitespace","rotated","imageType","dataURL","penColor","dotSize","minWidth","androidHardwareAccelerationDisabled","style","loading","setLoading","webViewRef","source","injectedJavaScript","htmlContentValue","replace","html","getSignature","e","nativeEvent","data","readSignature","current","injectJavaScript","clearSignature","renderError","console","warn"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport { View, StyleSheet, ActivityIndicator } from \"react-native\";\n\nimport htmlContent from \"./h5/html\";\nimport injectedSignaturePad from \"./h5/js/signature_pad\";\nimport injectedApplication from \"./h5/js/app\";\n\nimport { WebView } from \"react-native-webview\";\n\nconst styles = StyleSheet.create({\n  webBg: {\n    width: \"100%\",\n    backgroundColor: \"#FFF\",\n    flex: 1\n  },\n  loadingOverlayContainer: { position: \"absolute\", top: 0, bottom: 0, left: 0, right: 0, alignItems: \"center\", justifyContent: \"center\" },\n});\n\nconst SignatureView = forwardRef(({\n  webStyle = \"\",\n  onOK = () => { },\n  onEmpty = () => { },\n  onClear = () => { },\n  onBegin = () => { },\n  onEnd = () => { },\n  descriptionText = \"Sign above\",\n  clearText = \"Clear\",\n  confirmText = \"Confirm\",\n  customHtml = null,\n  autoClear = false,\n  trimWhitespace = false,\n  rotated = false,\n  imageType = \"\",\n  dataURL = \"\",\n  penColor = \"\",\n  backgroundColor = \"\",\n  dotSize = 0,\n  minWidth = 0.5,\n  androidHardwareAccelerationDisabled = false,\n  style = null,\n}, ref) => {\n  const [loading, setLoading] = useState(true);\n  const webViewRef = useRef();\n  const source = useMemo(() => {\n    let injectedJavaScript = injectedSignaturePad + injectedApplication;\n    const htmlContentValue = customHtml ? customHtml : htmlContent;\n    injectedJavaScript = injectedJavaScript.replace(/<%autoClear%>/g, autoClear);\n    injectedJavaScript = injectedJavaScript.replace(/<%trimWhitespace%>/g, trimWhitespace);\n    injectedJavaScript = injectedJavaScript.replace(/<%imageType%>/g, imageType);\n    injectedJavaScript = injectedJavaScript.replace(/<%dataURL%>/g, dataURL);\n    injectedJavaScript = injectedJavaScript.replace(/<%penColor%>/g, penColor);\n    injectedJavaScript = injectedJavaScript.replace(/<%backgroundColor%>/g, backgroundColor);\n    injectedJavaScript = injectedJavaScript.replace(/<%dotSize%>/g, dotSize);\n    injectedJavaScript = injectedJavaScript.replace(/<%minWidth%>/g, minWidth);\n    \n    let html = htmlContentValue(injectedJavaScript);\n    html = html.replace(/<%style%>/g, webStyle);\n    html = html.replace(/<%description%>/g, descriptionText);\n    html = html.replace(/<%confirm%>/g, confirmText);\n    html = html.replace(/<%clear%>/g, clearText);\n    html = html.replace(/<%orientation%>/g, rotated);\n\n    return { html };\n  }, [customHtml, autoClear, trimWhitespace, rotated, imageType, webStyle, descriptionText, confirmText, clearText, dataURL])\n\n  const getSignature = e => {\n    switch (e.nativeEvent.data) {\n      case \"BEGIN\":\n        onBegin();\n        break;\n      case \"END\":\n        onEnd();\n        break;\n      case \"EMPTY\":\n        onEmpty();\n        break;\n      case \"CLEAR\":\n        onClear();\n        break;\n      default:\n        onOK(e.nativeEvent.data);\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    readSignature: () => {\n      if (webViewRef.current) {\n        webViewRef.current.injectJavaScript(\"readSignature();true;\");\n      }\n    },\n    clearSignature: () => {\n      if (webViewRef.current) {\n        webViewRef.current.injectJavaScript(\"clearSignature();true;\");\n      }\n    }\n  }), [webViewRef]);\n\n  const renderError = e => {\n    const { nativeEvent } = e;\n    console.warn(\"WebView error: \", nativeEvent);\n  };\n\n  return (\n    <View style={[styles.webBg, style]}>\n      <WebView\n        bounces={false}\n        androidHardwareAccelerationDisabled={androidHardwareAccelerationDisabled}\n        ref={webViewRef}\n        useWebKit={true}\n        source={source}\n        onMessage={getSignature}\n        javaScriptEnabled={true}\n        onError={renderError}\n        onLoadEnd={() => setLoading(false)}\n      />\n      {loading && <View style={styles.loadingOverlayContainer}>\n        <ActivityIndicator />\n      </View>}\n    </View>\n  );\n})\n\nexport default SignatureView;\n"]},"metadata":{},"sourceType":"module"}