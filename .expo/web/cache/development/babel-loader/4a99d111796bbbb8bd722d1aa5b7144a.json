{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Github\\\\aicare\\\\node_modules\\\\react-native-simple-time-picker\\\\index.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Picker } from \"@react-native-picker/picker\";\nvar MAX_HOURS = 23;\nvar MAX_MINUTES = 59;\nexport function TimePicker(_ref) {\n  var _value$hours,\n      _value$minutes,\n      _this = this;\n\n  var value = _ref.value,\n      onChange = _ref.onChange,\n      hoursUnit = _ref.hoursUnit,\n      minutesUnit = _ref.minutesUnit;\n\n  var _useState = useState((_value$hours = value == null ? void 0 : value.hours) != null ? _value$hours : 0),\n      _useState2 = _slicedToArray(_useState, 2),\n      internalHours = _useState2[0],\n      setInternalHours = _useState2[1];\n\n  var _useState3 = useState((_value$minutes = value == null ? void 0 : value.minutes) != null ? _value$minutes : 0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      internalMinutes = _useState4[0],\n      setInternalMinutes = _useState4[1];\n\n  var getHoursItems = function getHoursItems() {\n    var items = [];\n\n    for (var i = 0; i <= MAX_HOURS; i++) {\n      items.push(React.createElement(Picker.Item, {\n        key: i,\n        value: i,\n        label: i + \" \" + (hoursUnit != null ? hoursUnit : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return items;\n  };\n\n  var getMinutesItems = function getMinutesItems() {\n    var items = [];\n\n    for (var i = 0; i <= MAX_MINUTES; i++) {\n      items.push(React.createElement(Picker.Item, {\n        key: i,\n        value: i,\n        label: i + \" \" + (minutesUnit != null ? minutesUnit : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return items;\n  };\n\n  var handleChangeHours = function handleChangeHours(hours) {\n    setInternalHours(hours);\n    var newValue = {\n      minutes: internalMinutes,\n      hours: hours\n    };\n    onChange == null ? void 0 : onChange(newValue);\n  };\n\n  var handleChangeMinutes = function handleChangeMinutes(minutes) {\n    setInternalMinutes(minutes);\n    var newValue = {\n      minutes: minutes,\n      hours: internalMinutes\n    };\n    onChange == null ? void 0 : onChange(newValue);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(Picker, {\n    style: styles.picker,\n    selectedValue: internalHours,\n    onValueChange: function onValueChange(itemValue) {\n      return handleChangeHours(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, getHoursItems()), React.createElement(Picker, {\n    style: styles.picker,\n    selectedValue: internalMinutes,\n    onValueChange: function onValueChange(itemValue) {\n      return handleChangeMinutes(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, getMinutesItems()));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  },\n  picker: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["F:/Github/aicare/node_modules/react-native-simple-time-picker/index.js"],"names":["React","useState","Picker","MAX_HOURS","MAX_MINUTES","TimePicker","value","onChange","hoursUnit","minutesUnit","hours","internalHours","setInternalHours","minutes","internalMinutes","setInternalMinutes","getHoursItems","items","i","push","getMinutesItems","handleChangeHours","newValue","handleChangeMinutes","styles","container","picker","itemValue","StyleSheet","create","flexDirection","flex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Picker } from \"@react-native-picker/picker\";\n\nconst MAX_HOURS = 23;\nconst MAX_MINUTES = 59;\n\nexport function TimePicker({ value, onChange, hoursUnit, minutesUnit }) {\n  const [internalHours, setInternalHours] = useState(value?.hours ?? 0);\n  const [internalMinutes, setInternalMinutes] = useState(value?.minutes ?? 0);\n\n  const getHoursItems = () => {\n    const items = [];\n    for (let i = 0; i <= MAX_HOURS; i++) {\n      items.push(\n        <Picker.Item key={i} value={i} label={`${i} ${hoursUnit ?? ''}`} />\n      );\n    }\n    return items;\n  };\n\n  const getMinutesItems = () => {\n    const items = [];\n    for (let i = 0; i <= MAX_MINUTES; i++) {\n      items.push(\n        <Picker.Item key={i} value={i} label={`${i} ${minutesUnit ?? ''}`} />\n      );\n    }\n    return items;\n  };\n\n  const handleChangeHours = (hours) => {\n    setInternalHours(hours)\n    const newValue = {\n      minutes: internalMinutes,\n      hours\n    }\n    onChange?.(newValue)\n  };\n\n  const handleChangeMinutes = (minutes) => {\n    setInternalMinutes(minutes);\n    const newValue = {\n      minutes,\n      hours: internalMinutes,\n    };\n    onChange?.(newValue);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Picker\n        style={styles.picker}\n        selectedValue={internalHours}\n        onValueChange={(itemValue) => handleChangeHours(itemValue)}\n      >\n        {getHoursItems()}\n      </Picker>\n      <Picker\n        style={styles.picker}\n        selectedValue={internalMinutes}\n        onValueChange={(itemValue) => handleChangeMinutes(itemValue)}\n      >\n        {getMinutesItems()}\n      </Picker>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n  },\n  picker: {\n    flex: 1,\n  },\n});\n\n"]},"metadata":{},"sourceType":"module"}