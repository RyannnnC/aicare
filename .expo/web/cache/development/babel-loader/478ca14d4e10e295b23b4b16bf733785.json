{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/olivermou/Documents/GitHub/aicare/node_modules/react-native-ratings/src/SwipeRating.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport times from 'lodash/times';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar STAR_IMAGE = require(\"./images/star.png\");\n\nvar HEART_IMAGE = require(\"./images/heart.png\");\n\nvar ROCKET_IMAGE = require(\"./images/rocket.png\");\n\nvar BELL_IMAGE = require(\"./images/bell.png\");\n\nvar TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\n\nvar SwipeRating = function (_Component) {\n  _inherits(SwipeRating, _Component);\n\n  var _super = _createSuper(SwipeRating);\n\n  function SwipeRating(props) {\n    var _this;\n\n    _classCallCheck(this, SwipeRating);\n\n    _this = _super.call(this, props);\n    var _this$props = _this.props,\n        onStartRating = _this$props.onStartRating,\n        onSwipeRating = _this$props.onSwipeRating,\n        onFinishRating = _this$props.onFinishRating,\n        fractions = _this$props.fractions;\n    var position = new Animated.ValueXY();\n    var panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onPanResponderGrant: function onPanResponderGrant(event, gesture) {\n        var newPosition = new Animated.ValueXY();\n        var tapPositionX = gesture.x0 - _this.state.centerX + gesture.dx;\n        newPosition.setValue({\n          x: tapPositionX,\n          y: 0\n        });\n\n        if (_this.state.isComponentMounted) {\n          _this.setState({\n            position: newPosition,\n            value: tapPositionX\n          });\n\n          var rating = _this.getCurrentRating(tapPositionX);\n\n          if (typeof onStartRating === 'function') onStartRating(rating);\n        }\n      },\n      onPanResponderMove: function onPanResponderMove(event, gesture) {\n        var newPosition = new Animated.ValueXY();\n        var tapPositionX = gesture.x0 - _this.state.centerX + gesture.dx;\n        newPosition.setValue({\n          x: tapPositionX,\n          y: 0\n        });\n\n        if (_this.state.isComponentMounted) {\n          _this.setState({\n            position: newPosition,\n            value: tapPositionX\n          });\n\n          var rating = _this.getCurrentRating(tapPositionX);\n\n          if (typeof onSwipeRating === \"function\") onSwipeRating(rating);\n        }\n      },\n      onPanResponderRelease: function onPanResponderRelease(event) {\n        var rating = _this.getCurrentRating(_this.state.value);\n\n        if (rating >= _this.props.minValue) {\n          if (!fractions) {\n            _this.setCurrentRating(rating);\n          }\n\n          if (typeof onFinishRating === 'function') onFinishRating(rating);\n        }\n      }\n    });\n    _this.state = {\n      panResponder: panResponder,\n      position: position,\n      display: false,\n      isComponentMounted: false\n    };\n    return _this;\n  }\n\n  _createClass(SwipeRating, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _STAR_IMAGE, _HEART_IMAGE, _ROCKET_IMAGE, _BELL_IMAGE;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(require(\"./images/star.png\"));\n\n            case 3:\n              _STAR_IMAGE = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(require(\"./images/heart.png\"));\n\n            case 6:\n              _HEART_IMAGE = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(require(\"./images/rocket.png\"));\n\n            case 9:\n              _ROCKET_IMAGE = _context.sent;\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(require(\"./images/bell.png\"));\n\n            case 12:\n              _BELL_IMAGE = _context.sent;\n              this.setState({\n                display: true,\n                isComponentMounted: true\n              });\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 19:\n              this.setCurrentRating(this.props.startingValue);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 16]], Promise);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.startingValue !== prevProps.startingValue) {\n        this.setCurrentRating(this.props.startingValue);\n      }\n    }\n  }, {\n    key: \"handleLayoutChange\",\n    value: function handleLayoutChange() {\n      var _this2 = this;\n\n      this.ratingRef.measure(function (fx, fy, width, height, px, py) {\n        _this2.setState({\n          centerX: px % Dimensions.get(\"window\").width + width / 2\n        });\n      });\n    }\n  }, {\n    key: \"getPrimaryViewStyle\",\n    value: function getPrimaryViewStyle() {\n      var position = this.state.position;\n      var _this$props2 = this.props,\n          imageSize = _this$props2.imageSize,\n          ratingCount = _this$props2.ratingCount,\n          type = _this$props2.type;\n      var color = TYPES[type].color;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n        extrapolate: 'clamp'\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: color,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"getSecondaryViewStyle\",\n    value: function getSecondaryViewStyle() {\n      var position = this.state.position;\n      var _this$props3 = this.props,\n          imageSize = _this$props3.imageSize,\n          ratingCount = _this$props3.ratingCount,\n          type = _this$props3.type;\n      var backgroundColor = TYPES[type].backgroundColor;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n        extrapolate: 'clamp'\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: backgroundColor,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"renderRatings\",\n    value: function renderRatings() {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          imageSize = _this$props4.imageSize,\n          ratingCount = _this$props4.ratingCount,\n          type = _this$props4.type,\n          tintColor = _this$props4.tintColor;\n      var source = TYPES[type].source;\n      return times(ratingCount, function (index) {\n        return React.createElement(View, {\n          key: index,\n          style: styles.starContainer,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 7\n          }\n        }, React.createElement(Image, {\n          source: source,\n          style: {\n            width: imageSize,\n            height: imageSize,\n            tintColor: tintColor\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 9\n          }\n        }));\n      });\n    }\n  }, {\n    key: \"getCurrentRating\",\n    value: function getCurrentRating(value) {\n      var _this$props5 = this.props,\n          fractions = _this$props5.fractions,\n          imageSize = _this$props5.imageSize,\n          ratingCount = _this$props5.ratingCount;\n      var startingValue = ratingCount / 2;\n      var currentRating = this.props.minValue ? this.props.minValue : 0;\n\n      if (value > ratingCount * imageSize / 2) {\n        currentRating = ratingCount;\n      } else if (value < -ratingCount * imageSize / 2) {\n        currentRating = this.props.minValue ? this.props.minValue : 0;\n      } else if (value <= imageSize || value > imageSize) {\n        currentRating = startingValue + value / imageSize;\n        currentRating = !fractions ? Math.ceil(currentRating) : +currentRating.toFixed(fractions);\n      } else {\n        currentRating = !fractions ? Math.ceil(startingValue) : +startingValue.toFixed(fractions);\n      }\n\n      if (this.props.jumpValue > 0 && this.props.jumpValue < this.props.ratingCount) {\n        return Math.ceil(currentRating * (1 / this.props.jumpValue)) / (1 / this.props.jumpValue);\n      } else {\n        return currentRating;\n      }\n    }\n  }, {\n    key: \"setCurrentRating\",\n    value: function setCurrentRating(rating) {\n      var _this$props6 = this.props,\n          imageSize = _this$props6.imageSize,\n          ratingCount = _this$props6.ratingCount;\n      var initialRating = ratingCount / 2;\n      var value = null;\n\n      if (rating > ratingCount) {\n        value = ratingCount * imageSize / 2;\n      } else if (rating < 0) {\n        value = -ratingCount * imageSize / 2;\n      } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n        value = (rating - initialRating) * imageSize;\n      } else {\n        value = 0;\n      }\n\n      var newPosition = new Animated.ValueXY();\n      newPosition.setValue({\n        x: value,\n        y: 0\n      });\n\n      if (this.state.isComponentMounted) {\n        this.setState({\n          position: newPosition,\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"displayCurrentRating\",\n    value: function displayCurrentRating() {\n      var _this$props7 = this.props,\n          ratingCount = _this$props7.ratingCount,\n          type = _this$props7.type,\n          readonly = _this$props7.readonly,\n          showReadOnlyText = _this$props7.showReadOnlyText,\n          ratingTextColor = _this$props7.ratingTextColor;\n      var color = ratingTextColor || TYPES[type].color;\n      return React.createElement(View, {\n        style: styles.showRatingView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.ratingView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [styles.ratingText, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }\n      }, \"Rating:\", ' '), React.createElement(Text, {\n        style: [styles.currentRatingText, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }\n      }, this.getCurrentRating(this.state.value)), React.createElement(Text, {\n        style: [styles.maxRatingText, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }\n      }, \"/\", ratingCount)), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 9\n        }\n      }, readonly && showReadOnlyText && React.createElement(Text, {\n        style: [styles.readonlyLabel, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 48\n        }\n      }, \"(readonly)\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props8 = this.props,\n          readonly = _this$props8.readonly,\n          type = _this$props8.type,\n          ratingImage = _this$props8.ratingImage,\n          ratingColor = _this$props8.ratingColor,\n          ratingBackgroundColor = _this$props8.ratingBackgroundColor,\n          style = _this$props8.style,\n          showRating = _this$props8.showRating;\n\n      if (type === 'custom') {\n        var custom = {\n          source: ratingImage,\n          color: ratingColor,\n          backgroundColor: ratingBackgroundColor\n        };\n        TYPES.custom = custom;\n      }\n\n      return this.state.display ? React.createElement(View, {\n        pointerEvents: readonly ? 'none' : 'auto',\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 7\n        }\n      }, showRating && this.displayCurrentRating(), React.createElement(View, _extends({\n        style: styles.starsWrapper\n      }, this.state.panResponder.panHandlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.starsInsideWrapper,\n        onLayout: function onLayout(e) {\n          _this4.handleLayoutChange(e);\n        },\n        ref: function ref(view) {\n          _this4.ratingRef = view;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: this.getPrimaryViewStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }\n      }), React.createElement(Animated.View, {\n        style: this.getSecondaryViewStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }\n      })), this.renderRatings())) : null;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        isComponentMounted: false\n      });\n    }\n  }]);\n\n  return SwipeRating;\n}(Component);\n\nSwipeRating.defaultProps = {\n  type: 'star',\n  ratingImage: require(\"./images/star.png\"),\n  ratingColor: '#f1c40f',\n  ratingBackgroundColor: 'white',\n  ratingCount: 5,\n  showReadOnlyText: true,\n  imageSize: 40,\n  minValue: 0,\n  jumpValue: 0\n};\nexport { SwipeRating as default };\nvar styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n});\n\nvar fractionsType = function fractionsType(props, propName, componentName) {\n  if (props[propName]) {\n    var value = props[propName];\n\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20 ? null : new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be between 0 and 20\");\n    }\n\n    return new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be a number\");\n  }\n};\n\nSwipeRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: PropTypes.node,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  ratingTextColor: PropTypes.string,\n  imageSize: PropTypes.number,\n  onStartRating: PropTypes.func,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: PropTypes.object,\n  readonly: PropTypes.bool,\n  showReadOnlyText: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n  minValue: PropTypes.number\n};","map":{"version":3,"sources":["/Users/olivermou/Documents/GitHub/aicare/node_modules/react-native-ratings/src/SwipeRating.js"],"names":["React","Component","times","PropTypes","STAR_IMAGE","require","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","TYPES","star","source","color","backgroundColor","heart","rocket","bell","SwipeRating","props","onStartRating","onSwipeRating","onFinishRating","fractions","position","Animated","ValueXY","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","event","gesture","newPosition","tapPositionX","x0","state","centerX","dx","setValue","x","y","isComponentMounted","setState","value","rating","getCurrentRating","onPanResponderMove","onPanResponderRelease","minValue","setCurrentRating","display","console","log","startingValue","prevProps","ratingRef","measure","fx","fy","width","height","px","py","Dimensions","get","imageSize","ratingCount","type","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","tintColor","index","styles","starContainer","currentRating","Math","ceil","toFixed","jumpValue","initialRating","readonly","showReadOnlyText","ratingTextColor","showRatingView","ratingView","ratingText","currentRatingText","maxRatingText","readonlyLabel","ratingImage","ratingColor","ratingBackgroundColor","style","showRating","custom","displayCurrentRating","starsWrapper","panHandlers","starsInsideWrapper","e","handleLayoutChange","view","getPrimaryViewStyle","getSecondaryViewStyle","renderRatings","defaultProps","StyleSheet","flexDirection","justifyContent","alignItems","top","left","right","bottom","paddingBottom","fontSize","textAlign","fontFamily","Platform","OS","fractionsType","propName","componentName","Error","propTypes","string","node","number","func","bool","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport times from 'lodash/times';\nimport PropTypes from 'prop-types';\n\nimport {\n  View, Text, Animated, PanResponder, Image,\n  StyleSheet, Platform, Dimensions\n} from 'react-native';\n\n// RATING IMAGES WITH STATIC BACKGROUND COLOR (white)\nconst STAR_IMAGE = require('./images/star.png');\nconst HEART_IMAGE = require('./images/heart.png');\nconst ROCKET_IMAGE = require('./images/rocket.png');\nconst BELL_IMAGE = require('./images/bell.png');\n\nconst TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\n\nexport default class SwipeRating extends Component {\n  static defaultProps = {\n    type: 'star',\n    ratingImage: require('./images/star.png'),\n    ratingColor: '#f1c40f',\n    ratingBackgroundColor: 'white',\n    ratingCount: 5,\n    showReadOnlyText: true,\n    imageSize: 40,\n    minValue: 0,\n    jumpValue: 0,\n  };\n\n  constructor(props) {\n    super(props);\n    const { onStartRating, onSwipeRating, onFinishRating, fractions } = this.props;\n    const position = new Animated.ValueXY();\n\n    const panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: (event, gesture) => {\n        const newPosition = new Animated.ValueXY();\n        const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n        newPosition.setValue({ x: tapPositionX, y: 0 });\n        if (this.state.isComponentMounted) {\n          this.setState({ position: newPosition, value: tapPositionX });\n          const rating = this.getCurrentRating(tapPositionX);\n          if (typeof onStartRating === 'function') onStartRating(rating);\n        }\n      },\n      onPanResponderMove: (event, gesture) => {\n        const newPosition = new Animated.ValueXY();\n        const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n        newPosition.setValue({ x: tapPositionX, y: 0 });\n        if (this.state.isComponentMounted) {\n          this.setState({ position: newPosition, value: tapPositionX });\n          const rating = this.getCurrentRating(tapPositionX);\n          if (typeof onSwipeRating === \"function\") onSwipeRating(rating);\n        }\n      },\n      onPanResponderRelease: event => {\n        const rating = this.getCurrentRating(this.state.value);\n        if (rating >= this.props.minValue) {\n          if (!fractions) {\n            // 'round up' to the nearest rating image\n            this.setCurrentRating(rating);\n          }\n          if (typeof onFinishRating === 'function') onFinishRating(rating);\n        }\n      }\n    });\n\n    this.state = { panResponder, position, display: false, isComponentMounted: false };\n  }\n\n  async componentDidMount() {\n    try {\n      const STAR_IMAGE = await require('./images/star.png');\n      const HEART_IMAGE = await require('./images/heart.png');\n      const ROCKET_IMAGE = await require('./images/rocket.png');\n      const BELL_IMAGE = await require('./images/bell.png');\n\n      this.setState({ display: true, isComponentMounted: true });\n    } catch(err) {\n      console.log(err)\n    }\n\n    this.setCurrentRating(this.props.startingValue);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.startingValue !== prevProps.startingValue) {\n      this.setCurrentRating(this.props.startingValue);\n    }\n  }\n\n  handleLayoutChange() {\n    this.ratingRef.measure((fx, fy, width, height, px, py) => {\n      this.setState({\n        centerX: (px % Dimensions.get(\"window\").width) + width / 2,\n      });\n    });\n  }\n\n  getPrimaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const color = TYPES[type].color;\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [0, (ratingCount * imageSize) / 2, ratingCount * imageSize],\n        extrapolate: 'clamp'\n      },\n      {\n        useNativeDriver: true\n      }\n    );\n\n    return {\n      backgroundColor: color,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  getSecondaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const backgroundColor = TYPES[type].backgroundColor;\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [ratingCount * imageSize, (ratingCount * imageSize) / 2, 0],\n        extrapolate: 'clamp'\n      },\n      {\n        useNativeDriver: true\n      }\n    );\n\n    return {\n      backgroundColor,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  renderRatings() {\n    const { imageSize, ratingCount, type, tintColor } = this.props;\n    const source = TYPES[type].source;\n\n    return times(ratingCount, index => (\n      <View key={index} style={styles.starContainer}>\n        <Image source={source} style={{ width: imageSize, height: imageSize, tintColor }} />\n      </View>\n    ));\n  }\n\n  getCurrentRating(value) {\n    // const { value } = this.state;\n    const { fractions, imageSize, ratingCount } = this.props;\n\n    const startingValue = ratingCount / 2;\n    let currentRating = (this.props.minValue) ? this.props.minValue : 0;\n\n    if (value > (ratingCount * imageSize) / 2) {\n      currentRating = ratingCount;\n    } else if (value < (-ratingCount * imageSize) / 2) {\n      currentRating = (this.props.minValue) ? this.props.minValue : 0;\n    } else if (value <= imageSize || value > imageSize) {\n      currentRating = startingValue + value / imageSize;\n      currentRating = !fractions ? Math.ceil(currentRating) : +currentRating.toFixed(fractions);\n    } else {\n      currentRating = !fractions ? Math.ceil(startingValue) : +startingValue.toFixed(fractions);\n    }\n    if (\n      this.props.jumpValue > 0 &&\n      this.props.jumpValue < this.props.ratingCount\n    ) {\n      return (\n        Math.ceil(currentRating * (1 / this.props.jumpValue)) /\n        (1 / this.props.jumpValue)\n      );\n    } else {\n      return currentRating;\n    }\n  }\n\n  setCurrentRating(rating) {\n    const { imageSize, ratingCount } = this.props;\n\n    // `initialRating` corresponds to `startingValue` in the getter. Naming it\n    // differently here avoids confusion with `value` below.\n    const initialRating = ratingCount / 2;\n    let value = null;\n\n    if (rating > ratingCount) {\n      value = (ratingCount * imageSize) / 2;\n    } else if (rating < 0) {\n      value = (-ratingCount * imageSize) / 2;\n    } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n      value = (rating - initialRating) * imageSize;\n    } else {\n      value = 0;\n    }\n\n    const newPosition = new Animated.ValueXY();\n    newPosition.setValue({ x: value, y: 0 });\n    if (this.state.isComponentMounted) {\n      this.setState({position: newPosition, value});\n    }\n  }\n\n  displayCurrentRating() {\n    const { ratingCount, type, readonly, showReadOnlyText, ratingTextColor } = this.props;\n    const color = ratingTextColor || TYPES[type].color;\n\n    return (\n      <View style={styles.showRatingView}>\n        <View style={styles.ratingView}>\n          <Text style={[styles.ratingText, { color }]}>Rating:{' '}</Text>\n          <Text style={[styles.currentRatingText, { color }]}>{this.getCurrentRating(this.state.value)}</Text>\n          <Text style={[styles.maxRatingText, { color }]}>/{ratingCount}</Text>\n        </View>\n        <View>{readonly && showReadOnlyText && <Text style={[styles.readonlyLabel, { color }]}>(readonly)</Text>}</View>\n      </View>\n    );\n  }\n\n  render() {\n    const { readonly, type, ratingImage, ratingColor, ratingBackgroundColor, style, showRating } = this.props;\n\n    if (type === 'custom') {\n      let custom = {\n        source: ratingImage,\n        color: ratingColor,\n        backgroundColor: ratingBackgroundColor\n      };\n      TYPES.custom = custom;\n    }\n\n    return (\n      this.state.display ?\n      <View pointerEvents={readonly ? 'none' : 'auto'} style={style}>\n        {showRating && this.displayCurrentRating()}\n        <View style={styles.starsWrapper} {...this.state.panResponder.panHandlers}>\n          <View style={styles.starsInsideWrapper} onLayout={(e) => {this.handleLayoutChange(e)}} ref={(view) => {this.ratingRef = view;}}>\n            <Animated.View style={this.getPrimaryViewStyle()} />\n            <Animated.View style={this.getSecondaryViewStyle()} />\n          </View>\n          {this.renderRatings()}\n        </View>\n      </View> :\n      null\n    );\n  }\n\n  componentWillUnmount() {\n    this.setState({ isComponentMounted: false });\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n});\n\nconst fractionsType = (props, propName, componentName) => {\n  if (props[propName]) {\n    const value = props[propName];\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20\n        ? null\n        : new Error(`\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`);\n    }\n\n    return new Error(`\\`${propName}\\` in \\`${componentName}\\` must be a number`);\n  }\n};\n\nSwipeRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: PropTypes.node,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  ratingTextColor: PropTypes.string,\n  imageSize: PropTypes.number,\n  onStartRating: PropTypes.func,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: PropTypes.object,\n  readonly: PropTypes.bool,\n  showReadOnlyText: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n  minValue: PropTypes.number\n};"]},"metadata":{},"sourceType":"module"}