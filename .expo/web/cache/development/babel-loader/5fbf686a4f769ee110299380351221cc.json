{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Github\\\\aicare\\\\node_modules\\\\react-native-tab-navigator\\\\Tab.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"./config/ViewPropTypes\";\nimport Layout from \"./Layout\";\n\nvar Tab = function (_React$Component) {\n  _inherits(Tab, _React$Component);\n\n  var _super = _createSuper(Tab);\n\n  function Tab(props, context) {\n    var _this;\n\n    _classCallCheck(this, Tab);\n\n    _this = _super.call(this, props, context);\n    _this._handlePress = _this._handlePress.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Tab, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          badge = _this$props.badge;\n      var icon = null;\n\n      if (React.Children.count(this.props.children) > 0) {\n        icon = React.Children.only(this.props.children);\n      }\n\n      if (title) {\n        title = React.createElement(Text, {\n          numberOfLines: 1,\n          allowFontScaling: !!this.props.allowFontScaling,\n          style: [styles.title, this.props.titleStyle],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }\n        }, title);\n      }\n\n      if (badge) {\n        badge = React.cloneElement(badge, {\n          style: [styles.badge, badge.props.style]\n        });\n      }\n\n      var tabStyle = [styles.container, title ? null : styles.untitledContainer, this.props.style];\n\n      if (!this.props.hidesTabTouch && Platform.OS === 'android' && Platform.Version >= 21) {\n        return React.createElement(TouchableNativeFeedback, {\n          testID: this.props.testID,\n          background: TouchableNativeFeedback.Ripple(undefined, true),\n          onPress: this._handlePress,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: tabStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }\n        }, icon, badge), title));\n      }\n\n      return React.createElement(TouchableOpacity, {\n        testID: this.props.testID,\n        activeOpacity: this.props.hidesTabTouch ? 1.0 : 0.8,\n        onPress: this._handlePress,\n        style: tabStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, icon, badge), title);\n    }\n  }, {\n    key: \"_handlePress\",\n    value: function _handlePress(event) {\n      if (this.props.onPress) {\n        this.props.onPress(event);\n      }\n    }\n  }]);\n\n  return Tab;\n}(React.Component);\n\nTab.propTypes = {\n  testID: PropTypes.string,\n  title: PropTypes.string,\n  titleStyle: Text.propTypes.style,\n  badge: PropTypes.element,\n  onPress: PropTypes.func,\n  hidesTabTouch: PropTypes.bool,\n  allowFontScaling: PropTypes.bool,\n  style: ViewPropTypes.style\n};\nexport { Tab as default };\nvar styles = StyleSheet.create({\n  badge: {\n    position: 'absolute',\n    top: -6,\n    right: -10\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  untitledContainer: {\n    paddingBottom: 13\n  },\n  title: {\n    color: '#929292',\n    fontSize: 10,\n    textAlign: 'center',\n    alignSelf: 'stretch',\n    marginTop: 4,\n    marginBottom: 1 + Layout.pixel\n  }\n});","map":{"version":3,"sources":["F:/Github/aicare/node_modules/react-native-tab-navigator/Tab.js"],"names":["React","PropTypes","ViewPropTypes","Layout","Tab","props","context","_handlePress","bind","title","badge","icon","Children","count","children","only","allowFontScaling","styles","titleStyle","cloneElement","style","tabStyle","container","untitledContainer","hidesTabTouch","Platform","OS","Version","testID","TouchableNativeFeedback","Ripple","undefined","event","onPress","Component","propTypes","string","Text","element","func","bool","StyleSheet","create","position","top","right","flex","flexDirection","justifyContent","alignItems","paddingBottom","color","fontSize","textAlign","alignSelf","marginTop","marginBottom","pixel"],"mappings":"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","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  TouchableNativeFeedback,\n  Platform,\n  View,\n} from 'react-native';\n\nimport ViewPropTypes from './config/ViewPropTypes';\nimport Layout from './Layout';\n\nexport default class Tab extends React.Component {\n  static propTypes = {\n    testID : PropTypes.string,\n    title: PropTypes.string,\n    titleStyle: Text.propTypes.style,\n    badge: PropTypes.element,\n    onPress: PropTypes.func,\n    hidesTabTouch: PropTypes.bool,\n    allowFontScaling: PropTypes.bool,\n    style: ViewPropTypes.style,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this._handlePress = this._handlePress.bind(this);\n  }\n\n  render() {\n    let { title, badge } = this.props;\n    let icon = null;\n    if (React.Children.count(this.props.children) > 0) {\n      icon = React.Children.only(this.props.children);\n    }\n\n    if (title) {\n      title =\n        <Text\n          numberOfLines={1}\n          allowFontScaling={!!this.props.allowFontScaling}\n          style={[styles.title, this.props.titleStyle]}>\n          {title}\n        </Text>;\n    }\n\n    if (badge) {\n      badge = React.cloneElement(badge, {\n        style: [styles.badge, badge.props.style],\n      });\n    }\n\n    let tabStyle = [\n      styles.container,\n      title ? null : styles.untitledContainer,\n      this.props.style,\n    ];\n    if (\n      !this.props.hidesTabTouch &&\n      Platform.OS === 'android' &&\n      Platform.Version >= 21\n    ) {\n      return (\n        <TouchableNativeFeedback\n          testID={this.props.testID}\n          background={TouchableNativeFeedback.Ripple(undefined, true)}\n          onPress={this._handlePress}>\n          <View style={tabStyle}>\n            <View>\n              {icon}\n              {badge}\n            </View>\n            {title}\n          </View>\n        </TouchableNativeFeedback>\n      );\n    }\n    return (\n      <TouchableOpacity\n        testID={this.props.testID}\n        activeOpacity={this.props.hidesTabTouch ? 1.0 : 0.8}\n        onPress={this._handlePress}\n        style={tabStyle}>\n        <View>\n          {icon}\n          {badge}\n        </View>\n        {title}\n      </TouchableOpacity>\n    );\n  }\n\n  _handlePress(event) {\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  }\n}\n\nlet styles = StyleSheet.create({\n  badge: {\n    position: 'absolute',\n    top: -6,\n    right: -10,\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  untitledContainer: {\n    paddingBottom: 13,\n  },\n  title: {\n    color: '#929292',\n    fontSize: 10,\n    textAlign: 'center',\n    alignSelf: 'stretch',\n    marginTop: 4,\n    marginBottom: 1 + Layout.pixel,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}