{"ast":null,"code":"var _jsxFileName = \"/Users/olivermou/Documents/GitHub/aicare/node_modules/react-native-calendar-picker/CalendarPicker/Controls.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\nexport default function Controls(props) {\n  var styles = props.styles,\n      textStyles = props.textStyles,\n      label = props.label,\n      component = props.component,\n      onPressControl = props.onPressControl,\n      disabled = props.disabled;\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return onPressControl();\n    },\n    style: styles,\n    disabled: disabled,\n    hitSlop: {\n      top: 20,\n      bottom: 20,\n      left: 40,\n      right: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      opacity: disabled ? 0 : 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, component || React.createElement(Text, {\n    style: [textStyles],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, label)));\n}\nControls.propTypes = {\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  label: PropTypes.string,\n  onPressControl: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/olivermou/Documents/GitHub/aicare/node_modules/react-native-calendar-picker/CalendarPicker/Controls.js"],"names":["React","PropTypes","Controls","props","styles","textStyles","label","component","onPressControl","disabled","top","bottom","left","right","opacity","propTypes","oneOfType","array","object","string","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAMA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,MAEpCC,MAFoC,GAQlCD,KARkC,CAEpCC,MAFoC;AAAA,MAGpCC,UAHoC,GAQlCF,KARkC,CAGpCE,UAHoC;AAAA,MAIpCC,KAJoC,GAQlCH,KARkC,CAIpCG,KAJoC;AAAA,MAKpCC,SALoC,GAQlCJ,KARkC,CAKpCI,SALoC;AAAA,MAMpCC,cANoC,GAQlCL,KARkC,CAMpCK,cANoC;AAAA,MAOpCC,QAPoC,GAQlCN,KARkC,CAOpCM,QAPoC;AAUtC,SACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMD,cAAc,EAApB;AAAA,KADX;AAEE,IAAA,KAAK,EAAEJ,MAFT;AAGE,IAAA,QAAQ,EAAEK,QAHZ;AAIE,IAAA,OAAO,EAAE;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,MAAM,EAAE,EAAnB;AAAuBC,MAAAA,IAAI,EAAE,EAA7B;AAAiCC,MAAAA,KAAK,EAAE;AAAxC,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAEL,QAAQ,GAAG,CAAH,GAAO;AAAzB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,SAAS,IACT,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACF,UAAD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,KADJ,CAFJ,CANF,CADF;AAgBD;AAEDJ,QAAQ,CAACa,SAAT,GAAqB;AACnBX,EAAAA,MAAM,EAAEH,SAAS,CAACe,SAAV,CAAoB,CAACf,SAAS,CAACgB,KAAX,EAAkBhB,SAAS,CAACiB,MAA5B,CAApB,CADW;AAEnBZ,EAAAA,KAAK,EAAEL,SAAS,CAACkB,MAFE;AAGnBX,EAAAA,cAAc,EAAEP,SAAS,CAACmB,IAAV,CAAeC;AAHZ,CAArB","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Text,\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Controls(props) {\r\n  const {\r\n    styles,\r\n    textStyles,\r\n    label,\r\n    component,\r\n    onPressControl,\r\n    disabled,\r\n  } = props;\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={() => onPressControl()}\r\n      style={styles}\r\n      disabled={disabled}\r\n      hitSlop={{ top: 20, bottom: 20, left: 40, right: 40 }}\r\n    >\r\n      <View style={{opacity: disabled ? 0 : 1}}>\r\n        { component ||\r\n          <Text style={[textStyles]}>\r\n            { label }\r\n          </Text>\r\n        }\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nControls.propTypes = {\r\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n  label: PropTypes.string,\r\n  onPressControl: PropTypes.func.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}