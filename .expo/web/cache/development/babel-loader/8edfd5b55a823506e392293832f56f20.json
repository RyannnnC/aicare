{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ExponentPrint from \"./ExponentPrint\";\nexport var Orientation = ExponentPrint.Orientation;\nexport function printAsync(options) {\n  return _regeneratorRuntime.async(function printAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(Platform.OS === 'web')) {\n            _context.next = 4;\n            break;\n          }\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(ExponentPrint.print(options));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n          if (!(!options.uri && !options.html && Platform.OS === 'ios' && !options.markupFormatterIOS)) {\n            _context.next = 6;\n            break;\n          }\n\n          throw new Error('Must provide either `html` or `uri` to print');\n\n        case 6:\n          if (!(options.uri && options.html)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw new Error('Must provide exactly one of `html` and `uri` but both were specified');\n\n        case 8:\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(ExponentPrint.print(options));\n\n        case 10:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function selectPrinterAsync() {\n  return _regeneratorRuntime.async(function selectPrinterAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!ExponentPrint.selectPrinter) {\n            _context2.next = 4;\n            break;\n          }\n\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(ExponentPrint.selectPrinter());\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 4:\n          throw new UnavailabilityError('Print', 'selectPrinterAsync');\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function printToFileAsync() {\n  var options,\n      _args3 = arguments;\n  return _regeneratorRuntime.async(function printToFileAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(ExponentPrint.printToFileAsync(options));\n\n        case 3:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["../src/Print.ts"],"names":[],"mappings":";AAAA,SAAS,mBAAT,QAAoC,kBAApC;;AAGA,OAAO,aAAP;AAWA,OAAO,IAAM,WAAW,GAAoB,aAAa,CAAC,WAAnD;AAEP,OAAO,SAAe,UAAf,CAA0B,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBACD,QAAQ,CAAC,EAAT,KAAgB,KADf;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAEU,aAAa,CAAC,KAAd,CAAoB,OAApB,CAFV;;AAAA;AAAA;;AAAA;AAAA,gBAID,CAAC,OAAO,CAAC,GAAT,IAAgB,CAAC,OAAO,CAAC,IAAzB,IAAiC,QAAQ,CAAC,EAAT,KAAgB,KAAjD,IAA0D,CAAC,OAAO,CAAC,kBAJlE;AAAA;AAAA;AAAA;;AAAA,gBAKG,IAAI,KAAJ,CAAU,8CAAV,CALH;;AAAA;AAAA,gBAOD,OAAO,CAAC,GAAR,IAAe,OAAO,CAAC,IAPtB;AAAA;AAAA;AAAA;;AAAA,gBAQG,IAAI,KAAJ,CAAU,sEAAV,CARH;;AAAA;AAAA;AAAA,2CAUQ,aAAa,CAAC,KAAd,CAAoB,OAApB,CAVR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaP,OAAO,SAAe,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,eACD,aAAa,CAAC,aADb;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAEU,aAAa,CAAC,aAAd,EAFV;;AAAA;AAAA;;AAAA;AAAA,gBAKC,IAAI,mBAAJ,CAAwB,OAAxB,EAAiC,oBAAjC,CALD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQP,OAAO,SAAe,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC,UAAA,OAAhC,8DAA4D,EAA5D;AAAA;AAAA,2CACQ,aAAa,CAAC,gBAAd,CAA+B,OAA/B,CADR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport { Platform } from 'react-native';\n\nimport ExponentPrint from './ExponentPrint';\nimport {\n  FilePrintOptions,\n  FilePrintResult,\n  OrientationType,\n  PrintOptions,\n  Printer,\n} from './Print.types';\n\nexport { FilePrintOptions, FilePrintResult, OrientationType, PrintOptions, Printer };\n\nexport const Orientation: OrientationType = ExponentPrint.Orientation;\n\nexport async function printAsync(options: PrintOptions): Promise<void> {\n  if (Platform.OS === 'web') {\n    return await ExponentPrint.print(options);\n  }\n  if (!options.uri && !options.html && Platform.OS === 'ios' && !options.markupFormatterIOS) {\n    throw new Error('Must provide either `html` or `uri` to print');\n  }\n  if (options.uri && options.html) {\n    throw new Error('Must provide exactly one of `html` and `uri` but both were specified');\n  }\n  return await ExponentPrint.print(options);\n}\n\nexport async function selectPrinterAsync(): Promise<Printer> {\n  if (ExponentPrint.selectPrinter) {\n    return await ExponentPrint.selectPrinter();\n  }\n\n  throw new UnavailabilityError('Print', 'selectPrinterAsync');\n}\n\nexport async function printToFileAsync(options: FilePrintOptions = {}): Promise<FilePrintResult> {\n  return await ExponentPrint.printToFileAsync(options);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}