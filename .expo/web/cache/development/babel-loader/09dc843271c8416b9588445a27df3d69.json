{"ast":null,"code":"var _jsxFileName = \"F:\\\\Github\\\\aicare\\\\node_modules\\\\react-native-calendar-picker\\\\CalendarPicker\\\\Day.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nexport default function Day(props) {\n  var day = props.day,\n      month = props.month,\n      year = props.year,\n      styles = props.styles,\n      customDatesStyles = props.customDatesStyles,\n      onPressDay = props.onPressDay,\n      selectedStartDate = props.selectedStartDate,\n      selectedEndDate = props.selectedEndDate,\n      allowRangeSelection = props.allowRangeSelection,\n      allowBackwardRangeSelect = props.allowBackwardRangeSelect,\n      propSelectedDayStyle = props.selectedDayStyle,\n      selectedDisabledDatesTextStyle = props.selectedDisabledDatesTextStyle,\n      selectedRangeStartStyle = props.selectedRangeStartStyle,\n      selectedRangeStyle = props.selectedRangeStyle,\n      selectedRangeEndStyle = props.selectedRangeEndStyle,\n      textStyle = props.textStyle,\n      todayTextStyle = props.todayTextStyle,\n      propSelectedDayTextStyle = props.selectedDayTextStyle,\n      selectedRangeStartTextStyle = props.selectedRangeStartTextStyle,\n      selectedRangeEndTextStyle = props.selectedRangeEndTextStyle,\n      minDate = props.minDate,\n      maxDate = props.maxDate,\n      disabledDates = props.disabledDates,\n      disabledDatesTextStyle = props.disabledDatesTextStyle,\n      minRangeDuration = props.minRangeDuration,\n      maxRangeDuration = props.maxRangeDuration,\n      enableDateChange = props.enableDateChange;\n  var thisDay = moment({\n    year: year,\n    month: month,\n    day: day,\n    hour: 12\n  });\n  var today = moment();\n  var dateOutOfRange;\n  var selectedDayContainerStyle = styles.dayButton;\n  var selectedDayTextStyle = {};\n  var selectedDayStyle;\n  var overrideOutOfRangeTextStyle;\n  var dateIsBeforeMin = false;\n  var dateIsAfterMax = false;\n  var dateIsDisabled = false;\n  var dateRangeLessThanMin = false;\n  var dateRangeGreaterThanMax = false;\n  var customContainerStyle, customDateStyle, customTextStyle;\n\n  if (maxDate) {\n    dateIsAfterMax = thisDay.isAfter(maxDate, 'day');\n  }\n\n  if (minDate) {\n    dateIsBeforeMin = thisDay.isBefore(minDate, 'day');\n  }\n\n  if (disabledDates) {\n    if (Array.isArray(disabledDates) && disabledDates.indexOf(thisDay.valueOf()) >= 0) {\n      dateIsDisabled = true;\n    } else if (disabledDates instanceof Function) {\n      dateIsDisabled = disabledDates(thisDay);\n    }\n  }\n\n  if (allowRangeSelection && selectedStartDate && !selectedEndDate) {\n    var daysDiff = thisDay.diff(selectedStartDate, 'days');\n    daysDiff = allowBackwardRangeSelect ? Math.abs(daysDiff) : daysDiff;\n\n    if (maxRangeDuration) {\n      if (Array.isArray(maxRangeDuration)) {\n        var maxRangeEntry = maxRangeDuration.find(function (mrd) {\n          return selectedStartDate.isSame(mrd.date, 'day');\n        });\n\n        if (maxRangeEntry && daysDiff > maxRangeEntry.maxDuration) {\n          dateRangeGreaterThanMax = true;\n        }\n      } else if (daysDiff > maxRangeDuration) {\n        dateRangeGreaterThanMax = true;\n      }\n    }\n\n    if (minRangeDuration) {\n      if (Array.isArray(minRangeDuration)) {\n        var minRangeEntry = minRangeDuration.find(function (mrd) {\n          return selectedStartDate.isSame(mrd.date, 'day');\n        });\n\n        if (minRangeEntry && daysDiff < minRangeEntry.minDuration) {\n          dateRangeLessThanMin = true;\n        }\n      } else if (daysDiff < minRangeDuration) {\n        dateRangeLessThanMin = true;\n      }\n    }\n\n    if (!allowBackwardRangeSelect && daysDiff < 0) {\n      dateRangeLessThanMin = true;\n    }\n  }\n\n  dateOutOfRange = dateIsAfterMax || dateIsBeforeMin || dateIsDisabled || dateRangeLessThanMin || dateRangeGreaterThanMax;\n  var isThisDaySameAsSelectedStart = thisDay.isSame(selectedStartDate, 'day');\n  var isThisDaySameAsSelectedEnd = thisDay.isSame(selectedEndDate, 'day');\n  var isThisDateInSelectedRange = selectedStartDate && selectedEndDate && thisDay.isBetween(selectedStartDate, selectedEndDate, 'day', '[]');\n\n  if (!dateOutOfRange || isThisDaySameAsSelectedStart || isThisDaySameAsSelectedEnd || isThisDateInSelectedRange) {\n    var isToday = thisDay.isSame(today, 'day');\n\n    if (isToday) {\n      selectedDayContainerStyle = styles.selectedToday;\n      selectedDayTextStyle = [todayTextStyle || styles.selectedDayLabel, propSelectedDayTextStyle];\n    }\n\n    if (Array.isArray(customDatesStyles)) {\n      for (var _iterator = _createForOfIteratorHelperLoose(customDatesStyles), _step; !(_step = _iterator()).done;) {\n        var cds = _step.value;\n\n        if (thisDay.isSame(moment(cds.date), 'day')) {\n          customContainerStyle = cds.containerStyle;\n          customDateStyle = cds.style;\n          customTextStyle = cds.textStyle;\n          break;\n        }\n      }\n    } else if (customDatesStyles instanceof Function) {\n      var _cds = customDatesStyles(thisDay) || {};\n\n      customContainerStyle = _cds.containerStyle;\n      customDateStyle = _cds.style;\n      customTextStyle = _cds.textStyle;\n    }\n\n    if (isToday && customDateStyle) {\n      selectedDayContainerStyle = [styles.selectedToday, customDateStyle];\n    }\n\n    if (!allowRangeSelection && selectedStartDate && isThisDaySameAsSelectedStart) {\n      selectedDayContainerStyle = styles.selectedDay;\n      selectedDayTextStyle = [styles.selectedDayLabel, isToday && todayTextStyle, propSelectedDayTextStyle];\n      selectedDayStyle = propSelectedDayStyle || styles.selectedDayBackground;\n    }\n\n    if (allowRangeSelection) {\n      if (selectedStartDate && selectedEndDate) {\n        if (isThisDaySameAsSelectedStart) {\n          selectedDayContainerStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\n        }\n\n        if (isThisDaySameAsSelectedEnd) {\n          selectedDayContainerStyle = [styles.endDayWrapper, selectedRangeStyle, selectedRangeEndStyle];\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeEndTextStyle];\n        }\n\n        if (isThisDaySameAsSelectedEnd && isThisDaySameAsSelectedStart && selectedEndDate.isSame(selectedStartDate, 'day')) {\n          selectedDayContainerStyle = [styles.selectedDay, styles.selectedDayBackground, selectedRangeStyle];\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\n        }\n\n        if (thisDay.isBetween(selectedStartDate, selectedEndDate, 'day', '()')) {\n          selectedDayContainerStyle = [styles.inRangeDay, selectedRangeStyle];\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle];\n        }\n      }\n\n      if (selectedStartDate && !selectedEndDate && isThisDaySameAsSelectedStart) {\n        selectedDayContainerStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\n        selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\n        overrideOutOfRangeTextStyle = selectedRangeStartTextStyle;\n      }\n    }\n\n    if (dateOutOfRange) {\n      return React.createElement(View, {\n        style: [styles.dayWrapper, customContainerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [customDateStyle, selectedDayContainerStyle, selectedDayStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.dayLabel, textStyle, styles.disabledText, disabledDatesTextStyle, styles.selectedDisabledText, selectedDisabledDatesTextStyle, overrideOutOfRangeTextStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }\n      }, day)));\n    } else {\n      return React.createElement(View, {\n        style: [styles.dayWrapper, customContainerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: !enableDateChange,\n        style: [customDateStyle, selectedDayContainerStyle, selectedDayStyle],\n        onPress: function onPress() {\n          return onPressDay({\n            year: year,\n            month: month,\n            day: day\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.dayLabel, textStyle, customTextStyle, selectedDayTextStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }, day)));\n    }\n  } else {\n    return React.createElement(View, {\n      style: styles.dayWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: [textStyle, styles.disabledText, disabledDatesTextStyle],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }, day));\n  }\n}\nDay.defaultProps = {\n  customDatesStyles: []\n};\nDay.propTypes = {\n  styles: PropTypes.shape({}),\n  day: PropTypes.number,\n  onPressDay: PropTypes.func,\n  disabledDates: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n  minRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\n  maxRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number])\n};","map":{"version":3,"sources":["F:/Github/aicare/node_modules/react-native-calendar-picker/CalendarPicker/Day.js"],"names":["React","PropTypes","moment","Day","props","day","month","year","styles","customDatesStyles","onPressDay","selectedStartDate","selectedEndDate","allowRangeSelection","allowBackwardRangeSelect","propSelectedDayStyle","selectedDayStyle","selectedDisabledDatesTextStyle","selectedRangeStartStyle","selectedRangeStyle","selectedRangeEndStyle","textStyle","todayTextStyle","propSelectedDayTextStyle","selectedDayTextStyle","selectedRangeStartTextStyle","selectedRangeEndTextStyle","minDate","maxDate","disabledDates","disabledDatesTextStyle","minRangeDuration","maxRangeDuration","enableDateChange","thisDay","hour","today","dateOutOfRange","selectedDayContainerStyle","dayButton","overrideOutOfRangeTextStyle","dateIsBeforeMin","dateIsAfterMax","dateIsDisabled","dateRangeLessThanMin","dateRangeGreaterThanMax","customContainerStyle","customDateStyle","customTextStyle","isAfter","isBefore","Array","isArray","indexOf","valueOf","Function","daysDiff","diff","Math","abs","maxRangeEntry","find","mrd","isSame","date","maxDuration","minRangeEntry","minDuration","isThisDaySameAsSelectedStart","isThisDaySameAsSelectedEnd","isThisDateInSelectedRange","isBetween","isToday","selectedToday","selectedDayLabel","cds","containerStyle","style","selectedDay","selectedDayBackground","startDayWrapper","endDayWrapper","inRangeDay","dayWrapper","dayLabel","disabledText","selectedDisabledText","defaultProps","propTypes","shape","number","func","oneOfType","array"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\n\r\nexport default function Day(props) {\r\n  const {\r\n    day,\r\n    month,\r\n    year,\r\n    styles,\r\n    customDatesStyles,\r\n    onPressDay,\r\n    selectedStartDate,\r\n    selectedEndDate,\r\n    allowRangeSelection,\r\n    allowBackwardRangeSelect,\r\n    selectedDayStyle: propSelectedDayStyle,\r\n    selectedDisabledDatesTextStyle,\r\n    selectedRangeStartStyle,\r\n    selectedRangeStyle,\r\n    selectedRangeEndStyle,\r\n    textStyle,\r\n    todayTextStyle,\r\n    selectedDayTextStyle: propSelectedDayTextStyle,\r\n    selectedRangeStartTextStyle,\r\n    selectedRangeEndTextStyle,\r\n    minDate,\r\n    maxDate,\r\n    disabledDates,\r\n    disabledDatesTextStyle,\r\n    minRangeDuration,\r\n    maxRangeDuration,\r\n    enableDateChange\r\n  } = props;\r\n\r\n  const thisDay = moment({year, month, day, hour: 12 });\r\n  const today = moment();\r\n\r\n  let dateOutOfRange;\r\n  let selectedDayContainerStyle = styles.dayButton; // may be overridden depending on state\r\n  let selectedDayTextStyle = {};\r\n  let selectedDayStyle;\r\n  let overrideOutOfRangeTextStyle;\r\n  let dateIsBeforeMin = false;\r\n  let dateIsAfterMax = false;\r\n  let dateIsDisabled = false;\r\n  let dateRangeLessThanMin = false;\r\n  let dateRangeGreaterThanMax = false;\r\n  let customContainerStyle, customDateStyle, customTextStyle;\r\n\r\n  // First let's check if date is out of range\r\n  // Check whether props maxDate / minDate are defined. If not supplied,\r\n  // don't restrict dates.\r\n  if (maxDate) {\r\n    dateIsAfterMax = thisDay.isAfter(maxDate, 'day');\r\n  }\r\n  if (minDate) {\r\n    dateIsBeforeMin = thisDay.isBefore(minDate, 'day');\r\n  }\r\n\r\n  if (disabledDates) {\r\n    if (Array.isArray(disabledDates) && disabledDates.indexOf(thisDay.valueOf()) >= 0) {\r\n      dateIsDisabled = true;\r\n    }\r\n    else if (disabledDates instanceof Function) {\r\n      dateIsDisabled = disabledDates(thisDay);\r\n    }\r\n  }\r\n\r\n  if (allowRangeSelection && selectedStartDate && !selectedEndDate) {\r\n    let daysDiff = thisDay.diff(selectedStartDate, 'days'); // may be + or -\r\n    daysDiff = allowBackwardRangeSelect ? Math.abs(daysDiff) : daysDiff;\r\n\r\n    if (maxRangeDuration) {\r\n      if (Array.isArray(maxRangeDuration)) {\r\n        let maxRangeEntry = maxRangeDuration.find(mrd => selectedStartDate.isSame(mrd.date, 'day') );\r\n        if (maxRangeEntry && daysDiff > maxRangeEntry.maxDuration) {\r\n          dateRangeGreaterThanMax = true;\r\n        }\r\n      } else if(daysDiff > maxRangeDuration) {\r\n        dateRangeGreaterThanMax = true;\r\n      }\r\n    }\r\n\r\n    if (minRangeDuration) {\r\n      if (Array.isArray(minRangeDuration)) {\r\n        let minRangeEntry = minRangeDuration.find(mrd => selectedStartDate.isSame(mrd.date, 'day') );\r\n        if (minRangeEntry && daysDiff < minRangeEntry.minDuration) {\r\n          dateRangeLessThanMin = true;\r\n        }\r\n      } else if(daysDiff < minRangeDuration) {\r\n        dateRangeLessThanMin = true;\r\n      }\r\n    }\r\n\r\n    if (!allowBackwardRangeSelect && daysDiff < 0) {\r\n      dateRangeLessThanMin = true;\r\n    }\r\n  }\r\n\r\n  dateOutOfRange = dateIsAfterMax || dateIsBeforeMin || dateIsDisabled || dateRangeLessThanMin || dateRangeGreaterThanMax;\r\n\r\n  let isThisDaySameAsSelectedStart = thisDay.isSame(selectedStartDate, 'day');\r\n  let isThisDaySameAsSelectedEnd = thisDay.isSame(selectedEndDate, 'day');\r\n  let isThisDateInSelectedRange =\r\n    selectedStartDate\r\n    && selectedEndDate\r\n    && thisDay.isBetween(selectedStartDate, selectedEndDate,'day','[]');\r\n\r\n  // If date is in range let's apply styles\r\n  if (!dateOutOfRange || isThisDaySameAsSelectedStart || isThisDaySameAsSelectedEnd || isThisDateInSelectedRange) {\r\n    // set today's style\r\n    let isToday = thisDay.isSame(today, 'day');\r\n    if (isToday) {\r\n      selectedDayContainerStyle = styles.selectedToday;\r\n      // todayTextStyle prop overrides selectedDayTextColor (created via makeStyles)\r\n      selectedDayTextStyle = [todayTextStyle || styles.selectedDayLabel, propSelectedDayTextStyle];\r\n    }\r\n\r\n    if (Array.isArray(customDatesStyles)) {\r\n      for (let cds of customDatesStyles) {\r\n        if (thisDay.isSame(moment(cds.date), 'day')) {\r\n          customContainerStyle = cds.containerStyle;\r\n          customDateStyle = cds.style;\r\n          customTextStyle = cds.textStyle;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    else if (customDatesStyles instanceof Function) {\r\n      let cds = customDatesStyles(thisDay) || {};\r\n      customContainerStyle = cds.containerStyle;\r\n      customDateStyle = cds.style;\r\n      customTextStyle = cds.textStyle;\r\n    }\r\n    if (isToday && customDateStyle) {\r\n      // Custom date style overrides 'today' style. It may be reset below\r\n      // by date selection styling.\r\n      selectedDayContainerStyle = [styles.selectedToday, customDateStyle];\r\n    }\r\n\r\n    // set selected day style\r\n    if (!allowRangeSelection &&\r\n        selectedStartDate &&\r\n        isThisDaySameAsSelectedStart)\r\n    {\r\n      selectedDayContainerStyle = styles.selectedDay;\r\n      selectedDayTextStyle = [styles.selectedDayLabel, isToday && todayTextStyle, propSelectedDayTextStyle];\r\n      // selectedDayStyle prop overrides selectedDayColor (created via makeStyles)\r\n      selectedDayStyle = propSelectedDayStyle || styles.selectedDayBackground;\r\n    }\r\n\r\n    // Set selected ranges styles\r\n    if (allowRangeSelection) {\r\n      if (selectedStartDate && selectedEndDate) {\r\n        // Apply style for start date\r\n        if (isThisDaySameAsSelectedStart) {\r\n          selectedDayContainerStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\r\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\r\n        }\r\n        // Apply style for end date\r\n        if (isThisDaySameAsSelectedEnd) {\r\n          selectedDayContainerStyle = [styles.endDayWrapper, selectedRangeStyle, selectedRangeEndStyle];\r\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeEndTextStyle];\r\n        }\r\n        // Apply style if start date is the same as end date\r\n        if (isThisDaySameAsSelectedEnd &&\r\n            isThisDaySameAsSelectedStart &&\r\n            selectedEndDate.isSame(selectedStartDate, 'day'))\r\n        {\r\n          selectedDayContainerStyle = [styles.selectedDay, styles.selectedDayBackground, selectedRangeStyle];\r\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\r\n        }\r\n        // Apply style for days inside of range, excluding start & end dates.\r\n        if (thisDay.isBetween(selectedStartDate, selectedEndDate, 'day', '()')) {\r\n          selectedDayContainerStyle = [styles.inRangeDay, selectedRangeStyle];\r\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle];\r\n        }\r\n      }\r\n      // Apply style if start date has been selected but end date has not\r\n      if (selectedStartDate &&\r\n          !selectedEndDate &&\r\n          isThisDaySameAsSelectedStart)\r\n      {\r\n        selectedDayContainerStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\r\n        selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\r\n        // Override out of range start day text style when minRangeDuration = 1.\r\n        // This allows selected start date's text to be styled by selectedRangeStartTextStyle\r\n        // even when it's below minRangeDuration.\r\n        overrideOutOfRangeTextStyle = selectedRangeStartTextStyle;\r\n      }\r\n    }\r\n\r\n    if (dateOutOfRange) { // selected start or end date, but not selectable now\r\n      return (\r\n        <View style={[styles.dayWrapper, customContainerStyle]}>\r\n          <View style={[customDateStyle, selectedDayContainerStyle, selectedDayStyle ]}>\r\n            <Text style={[styles.dayLabel, textStyle,\r\n              styles.disabledText, disabledDatesTextStyle,\r\n              styles.selectedDisabledText, selectedDisabledDatesTextStyle,\r\n              overrideOutOfRangeTextStyle\r\n            ]}>\r\n              { day }\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={[styles.dayWrapper, customContainerStyle]}>\r\n          <TouchableOpacity\r\n            disabled={!enableDateChange}\r\n            style={[customDateStyle, selectedDayContainerStyle, selectedDayStyle ]}\r\n            onPress={() => onPressDay({year, month, day}) }>\r\n            <Text style={[styles.dayLabel, textStyle, customTextStyle, selectedDayTextStyle]}>\r\n              { day }\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n  else {  // dateOutOfRange = true but not selected start or end date\r\n    return (\r\n      <View style={styles.dayWrapper}>\r\n        <Text style={[textStyle, styles.disabledText, disabledDatesTextStyle]}>\r\n          { day }\r\n        </Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nDay.defaultProps = {\r\n  customDatesStyles: [],\r\n};\r\n\r\nDay.propTypes = {\r\n  styles: PropTypes.shape({}),\r\n  day: PropTypes.number,\r\n  onPressDay: PropTypes.func,\r\n  disabledDates: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\r\n  minRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n  maxRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}