{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/olivermou/Documents/GitHub/aicare/node_modules/react-native-calendar-picker/CalendarPicker/YearSelector.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport YearsGridView from \"./YearsGridView\";\nimport YearsHeader from \"./YearsHeader\";\n\nvar YearSelector = function (_Component) {\n  _inherits(YearSelector, _Component);\n\n  var _super = _createSuper(YearSelector);\n\n  function YearSelector(props) {\n    var _this;\n\n    _classCallCheck(this, YearSelector);\n\n    _this = _super.call(this, props);\n\n    _this.handleOnYearViewPrevious = function () {\n      _this.setState({\n        initialYear: parseInt(Math.max(_this.state.initialYear - 25, 0))\n      });\n    };\n\n    _this.handleOnYearViewNext = function () {\n      _this.setState({\n        initialYear: parseInt(_this.state.initialYear + 25)\n      });\n    };\n\n    _this.state = {\n      initialYear: props.currentYear\n    };\n    return _this;\n  }\n\n  _createClass(YearSelector, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          styles = _this$props.styles,\n          textStyle = _this$props.textStyle,\n          title = _this$props.title,\n          initialDate = _this$props.initialDate,\n          currentMonth = _this$props.currentMonth,\n          currentYear = _this$props.currentYear,\n          minDate = _this$props.minDate,\n          maxDate = _this$props.maxDate,\n          restrictNavigation = _this$props.restrictNavigation,\n          previousComponent = _this$props.previousComponent,\n          nextComponent = _this$props.nextComponent,\n          previousTitle = _this$props.previousTitle,\n          nextTitle = _this$props.nextTitle,\n          previousTitleStyle = _this$props.previousTitleStyle,\n          nextTitleStyle = _this$props.nextTitleStyle,\n          headingLevel = _this$props.headingLevel,\n          onSelectYear = _this$props.onSelectYear;\n      return React.createElement(View, {\n        styles: styles.calendar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, React.createElement(YearsHeader, {\n        styles: styles,\n        textStyle: textStyle,\n        title: title,\n        headingLevel: headingLevel,\n        initialDate: initialDate,\n        minDate: minDate,\n        maxDate: maxDate,\n        restrictNavigation: restrictNavigation,\n        year: this.state.initialYear,\n        previousComponent: previousComponent,\n        nextComponent: nextComponent,\n        previousTitle: previousTitle,\n        nextTitle: nextTitle,\n        previousTitleStyle: previousTitleStyle,\n        nextTitleStyle: nextTitleStyle,\n        onYearViewPrevious: this.handleOnYearViewPrevious,\n        onYearViewNext: this.handleOnYearViewNext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }), React.createElement(YearsGridView, {\n        intialYear: this.state.initialYear,\n        currentMonth: currentMonth,\n        currentYear: currentYear,\n        styles: styles,\n        onSelectYear: onSelectYear,\n        minDate: minDate,\n        maxDate: maxDate,\n        textStyle: textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return YearSelector;\n}(Component);\n\nexport { YearSelector as default };","map":{"version":3,"sources":["/Users/olivermou/Documents/GitHub/aicare/node_modules/react-native-calendar-picker/CalendarPicker/YearSelector.js"],"names":["React","Component","YearsGridView","YearsHeader","YearSelector","props","handleOnYearViewPrevious","setState","initialYear","parseInt","Math","max","state","handleOnYearViewNext","currentYear","styles","textStyle","title","initialDate","currentMonth","minDate","maxDate","restrictNavigation","previousComponent","nextComponent","previousTitle","nextTitle","previousTitleStyle","nextTitleStyle","headingLevel","onSelectYear","calendar"],"mappings":"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","sourcesContent":["// Parent view for Year selector\r\n\r\nimport React, { Component } from 'react';\r\nimport { View } from 'react-native';\r\nimport YearsGridView from './YearsGridView';\r\nimport YearsHeader from './YearsHeader';\r\n\r\nexport default class YearSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      initialYear: props.currentYear,\r\n    };\r\n  }\r\n\r\n  handleOnYearViewPrevious = () => {\r\n    this.setState({\r\n      initialYear: parseInt(Math.max(this.state.initialYear - 25, 0))\r\n    });\r\n  }\r\n\r\n  handleOnYearViewNext = () => {\r\n    this.setState({\r\n      initialYear: parseInt(this.state.initialYear + 25)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      styles,\r\n      textStyle,\r\n      title,\r\n      initialDate,\r\n      currentMonth,\r\n      currentYear,\r\n      minDate,\r\n      maxDate,\r\n      restrictNavigation,\r\n      previousComponent,\r\n      nextComponent,\r\n      previousTitle,\r\n      nextTitle,\r\n      previousTitleStyle,\r\n      nextTitleStyle,\r\n      headingLevel,\r\n      onSelectYear,\r\n    } = this.props;\r\n\r\n    return (\r\n      <View styles={styles.calendar}>\r\n        <YearsHeader\r\n          styles={styles}\r\n          textStyle={textStyle}\r\n          title={title}\r\n          headingLevel={headingLevel}\r\n          initialDate={initialDate}\r\n          minDate={minDate}\r\n          maxDate={maxDate}\r\n          restrictNavigation={restrictNavigation}\r\n          year={this.state.initialYear}\r\n          previousComponent={previousComponent}\r\n          nextComponent={nextComponent}\r\n          previousTitle={previousTitle}\r\n          nextTitle={nextTitle}\r\n          previousTitleStyle={previousTitleStyle}\r\n          nextTitleStyle={nextTitleStyle}\r\n          onYearViewPrevious={this.handleOnYearViewPrevious}\r\n          onYearViewNext={this.handleOnYearViewNext}\r\n        />\r\n        <YearsGridView\r\n          intialYear={this.state.initialYear}\r\n          currentMonth={currentMonth}\r\n          currentYear={currentYear}\r\n          styles={styles}\r\n          onSelectYear={onSelectYear}\r\n          minDate={minDate}\r\n          maxDate={maxDate}\r\n          textStyle={textStyle}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}