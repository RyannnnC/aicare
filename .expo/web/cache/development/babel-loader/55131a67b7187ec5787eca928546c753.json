{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from \"react\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport PropTypes from \"prop-types\";\nvar RNBottomActionSheet = NativeModules.RNBottomActionSheet;\n\nvar AlertView = function (_PureComponent) {\n  _inherits(AlertView, _PureComponent);\n\n  var _super = _createSuper(AlertView);\n\n  function AlertView() {\n    _classCallCheck(this, AlertView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AlertView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._show();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._show();\n    }\n  }, {\n    key: \"_show\",\n    value: function _show() {\n      if (this.props.visible) {\n        AlertView.Show(this.props);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }], [{\n    key: \"Show\",\n    value: function Show(props) {\n      if (props.title === undefined) props.title = AlertView.defaultProps.title;\n      if (props.message === undefined) props.message = AlertView.defaultProps.message;\n      if (props.positiveText === undefined) props.positiveText = AlertView.defaultProps.positiveText;\n      if (props.positiveBackgroundColor === undefined) props.positiveBackgroundColor = AlertView.defaultProps.positiveBackgroundColor;\n      if (props.positiveTextColor === undefined) props.positiveTextColor = AlertView.defaultProps.positiveTextColor;\n      if (props.negativeText === undefined) props.negativeText = AlertView.defaultProps.negativeText;\n      if (props.negativeBackgroundColor === undefined) props.negativeBackgroundColor = AlertView.defaultProps.negativeBackgroundColor;\n      if (props.negativeTextColor === undefined) props.negativeTextColor = AlertView.defaultProps.negativeTextColor;\n      RNBottomActionSheet.AlertView({\n        title: props.title,\n        message: props.message,\n        positiveText: props.positiveText,\n        positiveBackgroundColor: props.positiveBackgroundColor,\n        positiveTextColor: props.positiveTextColor,\n        negativeText: props.negativeText,\n        negativeBackgroundColor: props.negativeBackgroundColor,\n        negativeTextColor: props.negativeTextColor,\n        theme: props.theme\n      }, function (selection) {\n        if (selection === 1) {\n          props.onPositive && props.onPositive();\n        } else if (selection === 0) {\n          props.onNegative && props.onNegative();\n        }\n      });\n    }\n  }]);\n\n  return AlertView;\n}(PureComponent);\n\nAlertView.propTypes = _objectSpread(_objectSpread({}, ViewPropTypes), {}, {\n  title: PropTypes.string,\n  message: PropTypes.string,\n  positiveText: PropTypes.string,\n  positiveBackgroundColor: PropTypes.string,\n  positiveTextColor: PropTypes.string,\n  negativeText: PropTypes.string,\n  negativeBackgroundColor: PropTypes.string,\n  negativeTextColor: PropTypes.string,\n  theme: PropTypes.string,\n  onPositive: PropTypes.func,\n  onNegative: PropTypes.func,\n  visible: PropTypes.bool\n});\nAlertView.defaultProps = {\n  title: \"\",\n  message: \"\",\n  positiveText: \"OK\",\n  positiveBackgroundColor: \"#3f51b5\",\n  positiveTextColor: \"@FFFFFF\",\n  negativeText: \"\",\n  negativeBackgroundColor: \"\",\n  negativeTextColor: \"@3f51b5\",\n  theme: \"light\",\n  visible: false\n};\nexport { AlertView };","map":{"version":3,"sources":["F:/Github/aicare/node_modules/react-native-bottom-action-sheet/js/AlertView.js"],"names":["React","PureComponent","ViewPropTypes","PropTypes","RNBottomActionSheet","NativeModules","AlertView","_show","props","visible","Show","title","undefined","defaultProps","message","positiveText","positiveBackgroundColor","positiveTextColor","negativeText","negativeBackgroundColor","negativeTextColor","theme","selection","onPositive","onNegative","propTypes","string","func","bool"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { ViewPropTypes, NativeModules } from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nconst { RNBottomActionSheet } = NativeModules;\n\nclass AlertView extends PureComponent {\n\n  static propTypes = {\n    ...ViewPropTypes,\n\n    title: PropTypes.string,\n    message: PropTypes.string,\n    positiveText: PropTypes.string,\n    positiveBackgroundColor: PropTypes.string,\n    positiveTextColor: PropTypes.string,\n    negativeText: PropTypes.string,\n    negativeBackgroundColor: PropTypes.string,\n    negativeTextColor: PropTypes.string,\n    theme: PropTypes.string,\n\n    onPositive: PropTypes.func,\n    onNegative: PropTypes.func,\n\n    visible: PropTypes.bool\n  };\n\n  static defaultProps = {\n    title: \"\",\n    message: \"\",\n    positiveText: \"OK\",\n    positiveBackgroundColor: \"#3f51b5\",\n    positiveTextColor: \"@FFFFFF\",\n    negativeText: \"\",\n    negativeBackgroundColor: \"\",\n    negativeTextColor: \"@3f51b5\",\n    theme: \"light\",\n    visible: false\n  };\n\n  static Show(props) {\n    if (props.title === undefined) props.title = AlertView.defaultProps.title;\n    if (props.message === undefined)\n      props.message = AlertView.defaultProps.message;\n    if (props.positiveText === undefined)\n      props.positiveText = AlertView.defaultProps.positiveText;\n    if (props.positiveBackgroundColor === undefined)\n      props.positiveBackgroundColor =\n        AlertView.defaultProps.positiveBackgroundColor;\n    if (props.positiveTextColor === undefined)\n      props.positiveTextColor = AlertView.defaultProps.positiveTextColor;\n    if (props.negativeText === undefined)\n      props.negativeText = AlertView.defaultProps.negativeText;\n    if (props.negativeBackgroundColor === undefined)\n      props.negativeBackgroundColor =\n        AlertView.defaultProps.negativeBackgroundColor;\n    if (props.negativeTextColor === undefined)\n      props.negativeTextColor = AlertView.defaultProps.negativeTextColor;\n\n    RNBottomActionSheet.AlertView(\n      {\n        title: props.title,\n        message: props.message,\n        positiveText: props.positiveText,\n        positiveBackgroundColor: props.positiveBackgroundColor,\n        positiveTextColor: props.positiveTextColor,\n        negativeText: props.negativeText,\n        negativeBackgroundColor: props.negativeBackgroundColor,\n        negativeTextColor: props.negativeTextColor,\n        theme: props.theme\n      },\n      selection => {\n        if (selection === 1) {\n          props.onPositive && props.onPositive();\n        } else if (selection === 0) {\n          props.onNegative && props.onNegative();\n        }\n      }\n    );\n  }\n\n  componentDidMount() {\n    this._show();\n  }\n\n  componentDidUpdate() {\n    this._show();\n  }\n\n  _show() {\n    if (this.props.visible) {\n      AlertView.Show(this.props)\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\n\nexport { AlertView }\n"]},"metadata":{},"sourceType":"module"}