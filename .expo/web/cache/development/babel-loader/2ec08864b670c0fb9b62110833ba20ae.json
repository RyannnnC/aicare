{"ast":null,"code":"import { useEffect } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\n\nvar StatusBarManager = function StatusBarManager(_ref) {\n  var presentationStyle = _ref.presentationStyle;\n\n  if (Platform.OS === \"ios\" || presentationStyle !== \"overFullScreen\") {\n    return null;\n  }\n\n  StatusBar.setHidden(true);\n  useEffect(function () {\n    return function () {\n      return StatusBar.setHidden(false);\n    };\n  }, []);\n  return null;\n};\n\nexport default StatusBarManager;","map":{"version":3,"sources":["F:/Github/aicare/node_modules/react-native-image-viewing/dist/components/StatusBarManager.js"],"names":["useEffect","StatusBarManager","presentationStyle","Platform","OS","StatusBar","setHidden"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;;;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA4B;AAAA,MAAzBC,iBAAyB,QAAzBA,iBAAyB;;AACjD,MAAIC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyBF,iBAAiB,KAAK,gBAAnD,EAAqE;AACjE,WAAO,IAAP;AACH;;AAEDG,EAAAA,SAAS,CAACC,SAAV,CAAoB,IAApB;AACAN,EAAAA,SAAS,CAAC,YAAM;AACZ,WAAO;AAAA,aAAMK,SAAS,CAACC,SAAV,CAAoB,KAApB,CAAN;AAAA,KAAP;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAO,IAAP;AACH,CAVD;;AAWA,eAAeL,gBAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { Platform, StatusBar, } from \"react-native\";\nconst StatusBarManager = ({ presentationStyle, }) => {\n    if (Platform.OS === \"ios\" || presentationStyle !== \"overFullScreen\") {\n        return null;\n    }\n    //Can't get an actual state of app status bar with default RN. Gonna rely on \"presentationStyle === overFullScreen\" prop and guess application status bar state to be visible in this case.\n    StatusBar.setHidden(true);\n    useEffect(() => {\n        return () => StatusBar.setHidden(false);\n    }, []);\n    return null;\n};\nexport default StatusBarManager;\n"]},"metadata":{},"sourceType":"module"}