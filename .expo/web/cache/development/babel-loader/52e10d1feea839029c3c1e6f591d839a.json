{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Github\\\\aicare\\\\Scene\\\\Health\\\\languages.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { styles } from \"../providerStyle\";\nimport { MaterialCommunityIcons, MaterialIcons, Ionicons } from '@expo/vector-icons';\nimport DataContext from \"../../providerContext\";\n\nvar Languages = function (_Component) {\n  _inherits(Languages, _Component);\n\n  var _super = _createSuper(Languages);\n\n  function Languages() {\n    var _this;\n\n    _classCallCheck(this, Languages);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      buttons: [{\n        name: '普通话',\n        \"status\": 1,\n        backgroundColor: 'transparent',\n        fontColor: '#999999',\n        pressed: false,\n        borderColor: 'black'\n      }, {\n        name: '英语',\n        \"status\": 1,\n        backgroundColor: 'transparent',\n        fontColor: '#999999',\n        pressed: false,\n        borderColor: 'black'\n      }, {\n        name: '粤语',\n        \"status\": 1,\n        backgroundColor: 'transparent',\n        fontColor: '#999999',\n        pressed: false,\n        borderColor: 'black'\n      }, {\n        name: '法语',\n        \"status\": 1,\n        backgroundColor: 'transparent',\n        fontColor: '#999999',\n        pressed: false,\n        borderColor: 'black'\n      }, {\n        name: '德语',\n        \"status\": 1,\n        backgroundColor: 'transparent',\n        fontColor: '#999999',\n        pressed: false,\n        borderColor: 'black'\n      }, {\n        name: '俄语',\n        \"status\": 1,\n        backgroundColor: 'transparent',\n        fontColor: '#999999',\n        pressed: false,\n        borderColor: 'black'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Languages, [{\n    key: \"changeColor\",\n    value: function changeColor(index) {\n      var but = this.state.buttons;\n\n      if (!but[index].pressed) {\n        but[index].pressed = true;\n        but[index].backgroundColor = '#FF7E67';\n        but[index].borderColor = 'white';\n        but[index].fontColor = '#FFFFFF';\n        this.setState({\n          buttons: but\n        });\n      } else {\n        but[index].pressed = false;\n        but[index].backgroundColor = 'transparent';\n        but[index].borderColor = 'black';\n        but[index].fontColor = '#999999';\n        this.setState({\n          buttons: but\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1,\n          backgroundColor: 'white',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: {\n          width: '85%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          marginLeft: 30,\n          marginTop: 30,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: styles.smallIconImg,\n        source: require(\"../../images/providerImg/account_icon_profile_normal.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          fontWeight: '400'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, \"\\u8BED\\u8A00\\u9009\\u62E9\")), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: this.state.buttons[0].status = 1 ? '#FF7E67' : 'transparent',\n          borderWidth: 1,\n          borderColor: this.state.buttons[0].borderColor,\n          height: 30,\n          width: 'auto',\n          marginTop: 5,\n          marginBottom: 5,\n          marginLeft: 10,\n          marginRight: 10,\n          borderRadius: 10,\n          paddingLeft: 15,\n          paddingRight: 15,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.changeColor(0);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 12,\n          fontWeight: '300',\n          color: this.state.buttons[0].fontColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, \"\\u666E\\u901A\\u8BDD\")), React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: this.state.buttons[1].backgroundColor,\n          borderWidth: 1,\n          borderColor: this.state.buttons[1].borderColor,\n          height: 30,\n          width: 'auto',\n          marginTop: 5,\n          marginBottom: 5,\n          marginLeft: 10,\n          marginRight: 10,\n          borderRadius: 10,\n          paddingLeft: 15,\n          paddingRight: 15,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.changeColor(1);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 12,\n          fontWeight: '300',\n          color: this.state.buttons[1].fontColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, \"\\u7CA4\\u8BED\")), React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: this.state.buttons[2].backgroundColor,\n          borderWidth: 1,\n          borderColor: this.state.buttons[2].borderColor,\n          height: 30,\n          width: 'auto',\n          paddingLeft: 15,\n          paddingRight: 15,\n          marginTop: 5,\n          marginBottom: 5,\n          marginLeft: 10,\n          marginRight: 10,\n          borderRadius: 10,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.changeColor(2);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 12,\n          fontWeight: '300',\n          color: this.state.buttons[2].fontColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, \"\\u82F1\\u8BED\")), React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: this.state.buttons[3].backgroundColor,\n          borderWidth: 1,\n          borderColor: this.state.buttons[3].borderColor,\n          height: 30,\n          width: 'auto',\n          paddingLeft: 15,\n          paddingRight: 15,\n          marginTop: 5,\n          marginBottom: 5,\n          marginLeft: 10,\n          marginRight: 10,\n          borderRadius: 10,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.changeColor(3);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 12,\n          fontWeight: '300',\n          color: this.state.buttons[3].fontColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, \"\\u6CD5\\u8BED\"))), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: this.state.buttons[4].backgroundColor,\n          borderWidth: 1,\n          borderColor: this.state.buttons[4].borderColor,\n          height: 30,\n          width: 'auto',\n          paddingLeft: 15,\n          paddingRight: 15,\n          marginTop: 5,\n          marginBottom: 5,\n          marginLeft: 10,\n          marginRight: 10,\n          borderRadius: 10,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.changeColor(4);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 12,\n          fontWeight: '300',\n          color: this.state.buttons[4].fontColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }, \"\\u6CF0\\u8BED\")), React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: this.state.buttons[5].backgroundColor,\n          borderWidth: 1,\n          borderColor: this.state.buttons[5].borderColor,\n          height: 30,\n          width: 'auto',\n          paddingLeft: 15,\n          paddingRight: 15,\n          marginTop: 5,\n          marginBottom: 5,\n          marginLeft: 10,\n          marginRight: 10,\n          borderRadius: 10,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.changeColor(5);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 12,\n          fontWeight: '300',\n          color: this.state.buttons[5].fontColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      }, \"\\u5FB7\\u8BED\"))), React.createElement(TouchableOpacity, {\n        style: styles.resumeButton,\n        onPress: function onPress() {\n          _this2.context.action.changelanguage(_this2.state.buttons);\n\n          _this2.props.navigation.navigate('机构信息');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          fontWeight: '400',\n          color: '#ffffff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }, \"\\u786E\\u8BA4\"))));\n    }\n  }]);\n\n  return Languages;\n}(Component);\n\nexport { Languages as default };\nLanguages.contextType = DataContext;","map":{"version":3,"sources":["F:/Github/aicare/Scene/Health/languages.js"],"names":["React","Component","styles","MaterialCommunityIcons","MaterialIcons","Ionicons","DataContext","Languages","state","buttons","name","backgroundColor","fontColor","pressed","borderColor","index","but","setState","flex","alignItems","width","flexDirection","marginLeft","marginTop","marginBottom","smallIconImg","require","fontSize","fontWeight","status","borderWidth","height","marginRight","borderRadius","paddingLeft","paddingRight","justifyContent","changeColor","color","resumeButton","context","action","changelanguage","props","navigation","navigate","contextType"],"mappings":"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","sourcesContent":["import React ,{Component}from 'react';\r\nimport { Dimensions, Text, Button, View, Alert, Image,TouchableOpacity,ScrollView,SafeAreaView,TextInput } from 'react-native';\r\nimport {styles} from '../providerStyle';\r\nimport { MaterialCommunityIcons, MaterialIcons, Ionicons } from '@expo/vector-icons';\r\nimport DataContext from '../../providerContext';\r\n\r\nexport default class Languages extends Component {\r\n  state={\r\n    buttons: [\r\n        { name:'普通话',\"status\": 1,backgroundColor: 'transparent',fontColor: '#999999', pressed: false, borderColor:'black' },\r\n        { name:'英语',\"status\": 1,backgroundColor: 'transparent',fontColor: '#999999', pressed: false, borderColor:'black' },\r\n        { name:'粤语',\"status\": 1,backgroundColor: 'transparent',fontColor: '#999999', pressed: false, borderColor:'black' },\r\n        { name:'法语',\"status\": 1,backgroundColor: 'transparent',fontColor: '#999999', pressed: false, borderColor:'black' },\r\n        { name:'德语',\"status\": 1,backgroundColor: 'transparent',fontColor: '#999999', pressed: false, borderColor:'black' },\r\n        { name:'俄语',\"status\": 1,backgroundColor: 'transparent',fontColor: '#999999', pressed: false, borderColor:'black' },\r\n    ],\r\n  };\r\n\r\n\r\n  changeColor(index){\r\n    let but = this.state.buttons;\r\n    if(!but[index].pressed){\r\n       but[index].pressed = true;\r\n       but[index].backgroundColor = '#FF7E67';\r\n       but[index].borderColor = 'white';\r\n       but[index].fontColor = '#FFFFFF';\r\n       this.setState({buttons: but});\r\n    } else {\r\n      but[index].pressed = false;\r\n      but[index].backgroundColor = 'transparent';\r\n      but[index].borderColor = 'black';\r\n      but[index].fontColor = '#999999';\r\n      this.setState({buttons: but});\r\n    }\r\n  }\r\n\r\n  render() {\r\n  return (\r\n    <SafeAreaView style={{ flex:1 ,backgroundColor:'white',alignItems:'center'}}>\r\n      <View style={{width:'85%'}}>\r\n      <View style={{flexDirection: 'row',marginLeft:30,marginTop:30, marginBottom:10}}>\r\n      <Image\r\n        style = {styles.smallIconImg}\r\n        source={require('../../images/providerImg/account_icon_profile_normal.png')}\r\n      />\r\n      <Text style={{ fontSize:16, fontWeight: '400' }}>语言选择</Text>\r\n      </View>\r\n      <View style={{flexDirection: 'row', marginTop:10, marginBottom:10}}>\r\n      <TouchableOpacity style={{\r\n        backgroundColor:this.state.buttons[0].status=1?'#FF7E67':'transparent',\r\n        borderWidth: 1,\r\n        borderColor:this.state.buttons[0].borderColor,\r\n        height:30,\r\n        width:'auto',\r\n        marginTop:5,\r\n        marginBottom:5,\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        borderRadius:10,\r\n        paddingLeft:15,\r\n        paddingRight:15,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }}\r\n      onPress={()=>this.changeColor(0)}>\r\n        <Text style={{ fontSize:12, fontWeight: '300', color: this.state.buttons[0].fontColor }}>普通话</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={{\r\n        backgroundColor:this.state.buttons[1].backgroundColor,\r\n        borderWidth: 1,\r\n        borderColor:this.state.buttons[1].borderColor,\r\n        height:30,\r\n        width:'auto',\r\n        marginTop:5,\r\n        marginBottom:5,\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        borderRadius:10,\r\n        paddingLeft:15,\r\n        paddingRight:15,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }}\r\n      onPress={()=>this.changeColor(1)}>\r\n        <Text style={{ fontSize:12, fontWeight: '300', color: this.state.buttons[1].fontColor }}>粤语</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={{\r\n        backgroundColor:this.state.buttons[2].backgroundColor,\r\n        borderWidth: 1,\r\n        borderColor:this.state.buttons[2].borderColor,\r\n        height:30,\r\n        width:'auto',\r\n        paddingLeft:15,\r\n        paddingRight:15,\r\n        marginTop:5,\r\n        marginBottom:5,\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        borderRadius:10,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }}\r\n      onPress={()=>this.changeColor(2)}>\r\n        <Text style={{ fontSize:12, fontWeight: '300', color: this.state.buttons[2].fontColor }}>英语</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={{\r\n        backgroundColor:this.state.buttons[3].backgroundColor,\r\n        borderWidth: 1,\r\n        borderColor:this.state.buttons[3].borderColor,\r\n        height:30,\r\n        width:'auto',\r\n        paddingLeft:15,\r\n        paddingRight:15,\r\n        marginTop:5,\r\n        marginBottom:5,\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        borderRadius:10,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }}\r\n      onPress={()=>this.changeColor(3)}>\r\n        <Text style={{ fontSize:12, fontWeight: '300', color: this.state.buttons[3].fontColor }}>法语</Text>\r\n      </TouchableOpacity>\r\n      </View>\r\n      <View style={{flexDirection: 'row', marginTop:10, marginBottom:10}}>\r\n      <TouchableOpacity style={{\r\n        backgroundColor:this.state.buttons[4].backgroundColor,\r\n        borderWidth: 1,\r\n        borderColor:this.state.buttons[4].borderColor,\r\n        height:30,\r\n        width:'auto',\r\n        paddingLeft:15,\r\n        paddingRight:15,\r\n        marginTop:5,\r\n        marginBottom:5,\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        borderRadius:10,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }}\r\n      onPress={()=>this.changeColor(4)}>\r\n        <Text style={{ fontSize:12, fontWeight: '300', color: this.state.buttons[4].fontColor }}>泰语</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={{\r\n        backgroundColor:this.state.buttons[5].backgroundColor,\r\n        borderWidth: 1,\r\n        borderColor:this.state.buttons[5].borderColor,\r\n        height:30,\r\n        width:'auto',\r\n        paddingLeft:15,\r\n        paddingRight:15,\r\n        marginTop:5,\r\n        marginBottom:5,\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        borderRadius:10,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }}\r\n      onPress={()=>this.changeColor(5)}>\r\n        <Text style={{ fontSize:12, fontWeight: '300', color: this.state.buttons[5].fontColor }}>德语</Text>\r\n      </TouchableOpacity>\r\n      </View>\r\n      <TouchableOpacity style={styles.resumeButton} onPress={() => {\r\n        this.context.action.changelanguage(this.state.buttons)\r\n        this.props.navigation.navigate('机构信息')}}>\r\n        <Text style={{ fontSize:16, fontWeight: '400', color: '#ffffff' }}>确认</Text>\r\n      </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );}\r\n}\r\nLanguages.contextType = DataContext;\r\n"]},"metadata":{},"sourceType":"module"}