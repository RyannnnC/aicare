{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"./config/ViewPropTypes\";\n\nvar TabNavigatorItem = function (_React$Component) {\n  _inherits(TabNavigatorItem, _React$Component);\n\n  var _super = _createSuper(TabNavigatorItem);\n\n  function TabNavigatorItem() {\n    _classCallCheck(this, TabNavigatorItem);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TabNavigatorItem, [{\n    key: \"render\",\n    value: function render() {\n      var child = React.Children.only(this.props.children);\n      return React.cloneElement(child, {\n        style: [child.props.style, this.props.style]\n      });\n    }\n  }]);\n\n  return TabNavigatorItem;\n}(React.Component);\n\nTabNavigatorItem.propTypes = {\n  renderIcon: PropTypes.func,\n  renderSelectedIcon: PropTypes.func,\n  badgeText: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  renderBadge: PropTypes.func,\n  title: PropTypes.string,\n  titleStyle: Text.propTypes.style,\n  selectedTitleStyle: Text.propTypes.style,\n  tabStyle: ViewPropTypes.style,\n  selected: PropTypes.bool,\n  onPress: PropTypes.func,\n  allowFontScaling: PropTypes.bool\n};\nTabNavigatorItem.defaultProps = {};\nexport { TabNavigatorItem as default };","map":{"version":3,"sources":["F:/Github/aicare/node_modules/react-native-tab-navigator/TabNavigatorItem.js"],"names":["React","PropTypes","ViewPropTypes","TabNavigatorItem","child","Children","only","props","children","cloneElement","style","Component","propTypes","renderIcon","func","renderSelectedIcon","badgeText","oneOfType","string","number","renderBadge","title","titleStyle","Text","selectedTitleStyle","tabStyle","selected","bool","onPress","allowFontScaling","defaultProps"],"mappings":"AAAA;;;;;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAMA,OAAOC,aAAP;;IAEqBC,gB;;;;;;;;;;;;;6BAkBV;AACP,UAAIC,KAAK,GAAGJ,KAAK,CAACK,QAAN,CAAeC,IAAf,CAAoB,KAAKC,KAAL,CAAWC,QAA/B,CAAZ;AACA,aAAOR,KAAK,CAACS,YAAN,CAAmBL,KAAnB,EAA0B;AAC/BM,QAAAA,KAAK,EAAE,CAACN,KAAK,CAACG,KAAN,CAAYG,KAAb,EAAoB,KAAKH,KAAL,CAAWG,KAA/B;AADwB,OAA1B,CAAP;AAGD;;;;EAvB2CV,KAAK,CAACW,S;;AAA/BR,gB,CACZS,S,GAAY;AACjBC,EAAAA,UAAU,EAAEZ,SAAS,CAACa,IADL;AAEjBC,EAAAA,kBAAkB,EAAEd,SAAS,CAACa,IAFb;AAGjBE,EAAAA,SAAS,EAAEf,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACiB,MAAX,EAAmBjB,SAAS,CAACkB,MAA7B,CAApB,CAHM;AAIjBC,EAAAA,WAAW,EAAEnB,SAAS,CAACa,IAJN;AAKjBO,EAAAA,KAAK,EAAEpB,SAAS,CAACiB,MALA;AAMjBI,EAAAA,UAAU,EAAEC,IAAI,CAACX,SAAL,CAAeF,KANV;AAOjBc,EAAAA,kBAAkB,EAAED,IAAI,CAACX,SAAL,CAAeF,KAPlB;AAQjBe,EAAAA,QAAQ,EAAEvB,aAAa,CAACQ,KARP;AASjBgB,EAAAA,QAAQ,EAAEzB,SAAS,CAAC0B,IATH;AAUjBC,EAAAA,OAAO,EAAE3B,SAAS,CAACa,IAVF;AAWjBe,EAAAA,gBAAgB,EAAE5B,SAAS,CAAC0B;AAXX,C;AADAxB,gB,CAeZ2B,Y,GAAe,E;SAfH3B,gB","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Text,\n  View,\n} from 'react-native';\n\nimport ViewPropTypes from './config/ViewPropTypes';\n\nexport default class TabNavigatorItem extends React.Component {\n  static propTypes = {\n    renderIcon: PropTypes.func,\n    renderSelectedIcon: PropTypes.func,\n    badgeText: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    renderBadge: PropTypes.func,\n    title: PropTypes.string,\n    titleStyle: Text.propTypes.style,\n    selectedTitleStyle: Text.propTypes.style,\n    tabStyle: ViewPropTypes.style,\n    selected: PropTypes.bool,\n    onPress: PropTypes.func,\n    allowFontScaling: PropTypes.bool,\n  };\n\n  static defaultProps = {\n  };\n\n  render() {\n    let child = React.Children.only(this.props.children);\n    return React.cloneElement(child, {\n      style: [child.props.style, this.props.style],\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}