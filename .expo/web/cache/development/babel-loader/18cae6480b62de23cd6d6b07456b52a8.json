{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/olivermou/Documents/GitHub/aicare/Scene/Health/dateSelect.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CalendarPicker from 'react-native-calendar-picker';\nimport { styles } from \"../providerStyle\";\nimport { StackActions } from '@react-navigation/native';\nimport DataContext from \"../../providerContext\";\nimport I18n from \"../switchLanguage\";\n\nvar DateSelect = function (_Component) {\n  _inherits(DateSelect, _Component);\n\n  var _super = _createSuper(DateSelect);\n\n  function DateSelect(props) {\n    var _this;\n\n    _classCallCheck(this, DateSelect);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selectedStartDate: null,\n      time: []\n    };\n    _this.onDateChange = _this.onDateChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DateSelect, [{\n    key: \"onDateChange\",\n    value: function onDateChange(date) {\n      this.setState({\n        selectedStartDate: date\n      });\n      this.context.action.changetime(date.toString().substring(0, 15));\n      var fd = this.formatDate(date);\n      this.sendRequest(fd);\n    }\n  }, {\n    key: \"formatDate\",\n    value: function formatDate(date) {\n      var d = new Date(date),\n          month = '' + (d.getMonth() + 1),\n          day = '' + d.getDate(),\n          year = d.getFullYear();\n      if (month.length < 2) month = '0' + month;\n      if (day.length < 2) day = '0' + day;\n      return [year, month, day].join('-');\n    }\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(date) {\n      var _this2 = this;\n\n      var url = 'http://' + this.context.url + '/aicare-business-api/business/user/scheduledetail?date=' + date;\n      fetch(url, {\n        method: 'GET',\n        mode: 'cors',\n        credentials: 'include',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'sso-auth-token': this.context.token,\n          'sso-refresh-token': this.context.refresh_token,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Credentials': true,\n          'Access-Control-Allow-Headers': 'content-type, sso-auth-token',\n          'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        if (json.code === 0) {\n          _this2.setState({\n            time: json.data\n          });\n        } else {\n          console.log(json.msg);\n        }\n      }).catch(function (error) {\n        return console.warn(error);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var d = new Date();\n      var date = this.formatDate(d);\n      var url = 'http://' + this.context.url + '/aicare-business-api/business/user/scheduledetail?date=' + date;\n      fetch(url, {\n        method: 'GET',\n        mode: 'cors',\n        credentials: 'include',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'sso-auth-token': this.context.token,\n          'sso-refresh-token': this.context.refresh_token,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Credentials': true,\n          'Access-Control-Allow-Headers': 'content-type, sso-auth-token',\n          'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        if (json.code === 0) {\n          console.log(json.msg);\n\n          _this3.setState({\n            time: json.data\n          });\n        } else {\n          console.log(json.msg);\n        }\n      }).catch(function (error) {\n        return console.warn(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var state = this.context;\n      var navigation = this.props.navigation;\n      var selectedStartDate = this.state.selectedStartDate;\n      var times = [];\n\n      if (this.state.time.length > 0) {\n        times = this.state.time.map(function (item) {\n          return React.createElement(View, {\n            style: styles.timePick,\n            key: item.id,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 9\n            }\n          }, React.createElement(TouchableOpacity, {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 11\n            }\n          }, React.createElement(Text, {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }\n          }, item.startTime, \"-\", item.endTime)));\n        });\n      }\n\n      return React.createElement(View, {\n        style: {\n          backgroundColor: '#F7FAFA',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#006A71',\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }, I18n.t('orderTime')), React.createElement(CalendarPicker, {\n        onDateChange: this.onDateChange,\n        previousTitle: I18n.t('prevMonth'),\n        nextTitle: I18n.t('nextMonth'),\n        width: 300,\n        height: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: '#006A71',\n          fontSize: 16,\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, I18n.t('time')), React.createElement(ScrollView, {\n        style: {\n          marginTop: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, times));\n    }\n  }]);\n\n  return DateSelect;\n}(Component);\n\nexport { DateSelect as default };\nDateSelect.contextType = DataContext;","map":{"version":3,"sources":["/Users/olivermou/Documents/GitHub/aicare/Scene/Health/dateSelect.js"],"names":["React","Component","CalendarPicker","styles","StackActions","DataContext","I18n","DateSelect","props","state","selectedStartDate","time","onDateChange","bind","date","setState","context","action","changetime","toString","substring","fd","formatDate","sendRequest","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","url","fetch","method","mode","credentials","headers","token","refresh_token","then","response","json","code","data","console","log","msg","catch","error","warn","navigation","times","map","item","timePick","id","startTime","endTime","backgroundColor","alignItems","justifyContent","color","fontSize","t","marginTop","contextType"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;;AAIA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAAQC,MAAR;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,WAAP;AACA,OAAOC,IAAP;;IAEqBC,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE,IADR;AAEXC,MAAAA,IAAI,EAAC;AAFM,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AANiB;AAOlB;;;;iCAEYC,I,EAAM;AACjB,WAAKC,QAAL,CAAc;AACZL,QAAAA,iBAAiB,EAAEI;AADP,OAAd;AAGA,WAAKE,OAAL,CAAaC,MAAb,CAAoBC,UAApB,CAA+BJ,IAAI,CAACK,QAAL,GAAgBC,SAAhB,CAA0B,CAA1B,EAA6B,EAA7B,CAA/B;AACA,UAAIC,EAAE,GAAG,KAAKC,UAAL,CAAgBR,IAAhB,CAAT;AACA,WAAKS,WAAL,CAAiBF,EAAjB;AACD;;;+BAEUP,I,EAAM;AACf,UAAIU,CAAC,GAAG,IAAIC,IAAJ,CAASX,IAAT,CAAR;AAAA,UACIY,KAAK,GAAG,MAAMF,CAAC,CAACG,QAAF,KAAe,CAArB,CADZ;AAAA,UAEIC,GAAG,GAAG,KAAKJ,CAAC,CAACK,OAAF,EAFf;AAAA,UAGIC,IAAI,GAAGN,CAAC,CAACO,WAAF,EAHX;AAKA,UAAIL,KAAK,CAACM,MAAN,GAAe,CAAnB,EACIN,KAAK,GAAG,MAAMA,KAAd;AACJ,UAAIE,GAAG,CAACI,MAAJ,GAAa,CAAjB,EACIJ,GAAG,GAAG,MAAMA,GAAZ;AAEJ,aAAO,CAACE,IAAD,EAAOJ,KAAP,EAAcE,GAAd,EAAmBK,IAAnB,CAAwB,GAAxB,CAAP;AACD;;;gCACWnB,I,EAAK;AAAA;;AACf,UAAIoB,GAAG,GAAG,YACT,KAAKlB,OAAL,CAAakB,GADJ,GAET,yDAFS,GAGRpB,IAHF;AAIEqB,MAAAA,KAAK,CAACD,GAAD,EAAK;AACRE,QAAAA,MAAM,EAAE,KADA;AAERC,QAAAA,IAAI,EAAE,MAFE;AAGRC,QAAAA,WAAW,EAAE,SAHL;AAIRC,QAAAA,OAAO,EAAE;AACT,oBAAgB,kBADP;AAET,0BAAgB,kBAFP;AAGT,4BAAkB,KAAKvB,OAAL,CAAawB,KAHtB;AAIT,+BAAqB,KAAKxB,OAAL,CAAayB,aAJzB;AAKT,yCAA+B,GALtB;AAMT,8CAAoC,IAN3B;AAOT,0CAAgC,8BAPvB;AAQT,0CAAgC;AARvB;AAJD,OAAL,CAAL,CAcCC,IAdD,CAcM,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OAdN,EAeCF,IAfD,CAeM,UAACE,IAAD,EAAU;AACd,YAAIA,IAAI,CAACC,IAAL,KAAc,CAAlB,EAAqB;AACnB,UAAA,MAAI,CAAC9B,QAAL,CAAc;AAACJ,YAAAA,IAAI,EAACiC,IAAI,CAACE;AAAX,WAAd;AACD,SAFD,MAEO;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,GAAjB;AACD;AACF,OArBD,EAqBGC,KArBH,CAqBS,UAAAC,KAAK;AAAA,eAAIJ,OAAO,CAACK,IAAR,CAAaD,KAAb,CAAJ;AAAA,OArBd;AAsBH;;;wCACmB;AAAA;;AAChB,UAAI3B,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACA,UAAIX,IAAI,GAAG,KAAKQ,UAAL,CAAgBE,CAAhB,CAAX;AACA,UAAIU,GAAG,GAAG,YACT,KAAKlB,OAAL,CAAakB,GADJ,GAET,yDAFS,GAGRpB,IAHF;AAIEqB,MAAAA,KAAK,CAACD,GAAD,EAAK;AACRE,QAAAA,MAAM,EAAE,KADA;AAERC,QAAAA,IAAI,EAAE,MAFE;AAGRC,QAAAA,WAAW,EAAE,SAHL;AAIRC,QAAAA,OAAO,EAAE;AACT,oBAAgB,kBADP;AAET,0BAAgB,kBAFP;AAGT,4BAAkB,KAAKvB,OAAL,CAAawB,KAHtB;AAIT,+BAAqB,KAAKxB,OAAL,CAAayB,aAJzB;AAKT,yCAA+B,GALtB;AAMT,8CAAoC,IAN3B;AAOT,0CAAgC,8BAPvB;AAQT,0CAAgC;AARvB;AAJD,OAAL,CAAL,CAcCC,IAdD,CAcM,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OAdN,EAeCF,IAfD,CAeM,UAACE,IAAD,EAAU;AACd,YAAIA,IAAI,CAACC,IAAL,KAAc,CAAlB,EAAqB;AACnBE,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,GAAjB;;AACA,UAAA,MAAI,CAAClC,QAAL,CAAc;AAACJ,YAAAA,IAAI,EAACiC,IAAI,CAACE;AAAX,WAAd;AACD,SAHD,MAGO;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,GAAjB;AACD;AACF,OAtBD,EAsBGC,KAtBH,CAsBS,UAAAC,KAAK;AAAA,eAAIJ,OAAO,CAACK,IAAR,CAAaD,KAAb,CAAJ;AAAA,OAtBd;AAuBL;;;6BAEQ;AAAA;;AACP,UAAI1C,KAAK,GAAG,KAAKO,OAAjB;AADO,UAECqC,UAFD,GAEgB,KAAK7C,KAFrB,CAEC6C,UAFD;AAAA,UAGC3C,iBAHD,GAGuB,KAAKD,KAH5B,CAGCC,iBAHD;AAKP,UAAI4C,KAAK,GAAC,EAAV;;AACA,UAAI,KAAK7C,KAAL,CAAWE,IAAX,CAAgBqB,MAAhB,GAAwB,CAA5B,EAA+B;AAC/BsB,QAAAA,KAAK,GAAG,KAAK7C,KAAL,CAAWE,IAAX,CAAgB4C,GAAhB,CAAoB,UAACC,IAAD,EAAU;AACpC,iBACE,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAErD,MAAM,CAACsD,QAApB;AAA8B,YAAA,GAAG,EAAED,IAAI,CAACE,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOF,IAAI,CAACG,SAAZ,OAAwBH,IAAI,CAACI,OAA7B,CADF,CADF,CADF;AAOD,SARO,CAAR;AAQG;;AACH,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAE,SAAlB;AAA8BC,UAAAA,UAAU,EAAE,QAA1C;AAAmDC,UAAAA,cAAc,EAAC;AAAlE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAI;AAAEC,UAAAA,KAAK,EAAC,SAAR;AAAkBC,UAAAA,QAAQ,EAAC;AAA3B,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgD3D,IAAI,CAAC4D,CAAL,CAAO,WAAP,CAAhD,CADF,EAEE,oBAAC,cAAD;AACE,QAAA,YAAY,EAAE,KAAKtD,YADrB;AAEE,QAAA,aAAa,EAAEN,IAAI,CAAC4D,CAAL,CAAO,WAAP,CAFjB;AAGE,QAAA,SAAS,EAAI5D,IAAI,CAAC4D,CAAL,CAAO,WAAP,CAHf;AAIE,QAAA,KAAK,EAAI,GAJX;AAKE,QAAA,MAAM,EAAI,GALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EASE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAI;AAAEF,UAAAA,KAAK,EAAC,SAAR;AAAkBC,UAAAA,QAAQ,EAAC,EAA3B;AAA8BE,UAAAA,SAAS,EAAC;AAAxC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6D7D,IAAI,CAAC4D,CAAL,CAAO,MAAP,CAA7D,CATF,EAUE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAG;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGb,KADH,CAVF,CADF;AAgBD;;;;EA5HqCrD,S;;SAAnBM,U;AA8HrBA,UAAU,CAAC6D,WAAX,GAAyB/D,WAAzB","sourcesContent":["import React, { Component } from 'react';\nimport {\n  StyleSheet, Text, Button, View, Alert, Image,TouchableOpacity,Switch,TextInput,ScrollView\n} from 'react-native';\nimport CalendarPicker from 'react-native-calendar-picker';\nimport {styles} from '../providerStyle';\nimport { StackActions } from '@react-navigation/native';\nimport DataContext from \"../../providerContext\";\nimport I18n from '../switchLanguage';\n\nexport default class DateSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedStartDate: null,\n      time:[],\n    };\n    this.onDateChange = this.onDateChange.bind(this);\n  }\n\n  onDateChange(date) {\n    this.setState({\n      selectedStartDate: date,\n    });\n    this.context.action.changetime(date.toString().substring(0, 15));\n    let fd = this.formatDate(date);\n    this.sendRequest(fd);\n  }\n\n  formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n  }\n  sendRequest(date){\n    let url = 'http://'\n    +this.context.url\n    +'/aicare-business-api/business/user/scheduledetail?date='\n    + date;\n      fetch(url,{\n        method: 'GET',\n        mode: 'cors',\n        credentials: 'include',\n        headers: {\n        'Accept':       'application/json',\n        'Content-Type': 'application/json',\n        'sso-auth-token': this.context.token,\n        'sso-refresh-token': this.context.refresh_token,\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Credentials': true,\n        'Access-Control-Allow-Headers': 'content-type, sso-auth-token',\n        'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE',\n      }})\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.code === 0) {\n          this.setState({time:json.data})\n        } else {\n          console.log(json.msg);\n        }\n      }).catch(error => console.warn(error));\n  }\n  componentDidMount() {\n      let d = new Date();\n      var date = this.formatDate(d);\n      let url = 'http://'\n      +this.context.url\n      +'/aicare-business-api/business/user/scheduledetail?date='\n      + date;\n        fetch(url,{\n          method: 'GET',\n          mode: 'cors',\n          credentials: 'include',\n          headers: {\n          'Accept':       'application/json',\n          'Content-Type': 'application/json',\n          'sso-auth-token': this.context.token,\n          'sso-refresh-token': this.context.refresh_token,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Credentials': true,\n          'Access-Control-Allow-Headers': 'content-type, sso-auth-token',\n          'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE',\n        }})\n        .then((response) => response.json())\n        .then((json) => {\n          if (json.code === 0) {\n            console.log(json.msg);\n            this.setState({time:json.data})\n          } else {\n            console.log(json.msg);\n          }\n        }).catch(error => console.warn(error));\n  }\n\n  render() {\n    let state = this.context;\n    const { navigation } = this.props;\n    const { selectedStartDate } = this.state;\n\n    let times=[];\n    if (this.state.time.length >0) {\n    times = this.state.time.map((item) => {\n      return (\n        <View style={styles.timePick} key={item.id}>\n          <TouchableOpacity>\n            <Text>{item.startTime}-{item.endTime}</Text>\n          </TouchableOpacity>\n        </View>\n      )\n    })}\n    return (\n      <View style={{backgroundColor: '#F7FAFA',  alignItems: 'center',justifyContent:'center'}}>\n        <Text style = {{ color:'#006A71',fontSize:16}}>{I18n.t('orderTime')}</Text>\n        <CalendarPicker\n          onDateChange={this.onDateChange}\n          previousTitle={I18n.t('prevMonth')}\n          nextTitle = {I18n.t('nextMonth')}\n          width = {300}\n          height = {300}\n        />\n        <Text style = {{ color:'#006A71',fontSize:16,marginTop:10}}>{I18n.t('time')}</Text>\n        <ScrollView style ={{marginTop: 30}}>\n          {times}\n        </ScrollView>\n      </View>\n    );\n  }\n}\nDateSelect.contextType = DataContext;\n"]},"metadata":{},"sourceType":"module"}